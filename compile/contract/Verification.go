// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerificationG1Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG1Point struct {
	X *big.Int
	Y *big.Int
}

// VerificationG2Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// VerificationReCipher is an auto generated low-level Go binding around an user-defined struct.
type VerificationReCipher struct {
	C2 VerificationG1Point
	C3 VerificationG1Point
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetFieldModulus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetIndex\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetReCipher\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C3\",\"type\":\"tuple\"}],\"internalType\":\"structVerification.ReCipher[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetReKeysResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVKResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ReCipherVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ReKeysVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"c0\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"c1\",\"type\":\"string\"}],\"name\":\"UploadCiphertext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"pkArray\",\"type\":\"tuple[]\"}],\"name\":\"UploadDRsKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"vk\",\"type\":\"tuple\"}],\"name\":\"UploadOwnerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"c2\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"c3\",\"type\":\"tuple[]\"}],\"name\":\"UploadReCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks0\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks1\",\"type\":\"tuple[]\"}],\"name\":\"UploadReKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"I\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"commitment\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"witness\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"UploadReKeysProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"tau1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point[]\",\"name\":\"tau2\",\"type\":\"tuple[]\"}],\"name\":\"UploadSystemKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"vk\",\"type\":\"tuple\"}],\"name\":\"UploadUserKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VKoVerify\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VKuVerify\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x6080604052348015600f57600080fd5b506136cd8061001f6000396000f3fe6080604052600436106101095760003560e01c806377c50301116100955780639e134b59116100645780639e134b591461028f578063c4bd0aba146102b2578063d6c6a252146102d2578063f029c25e146102e7578063f54de4651461030757600080fd5b806377c50301146102305780638959c8e5146102525780639a20745c1461025a5780639da5cd001461026f57600080fd5b806320a8dba6116100dc57806320a8dba6146101785780633ae15490146101a55780635307dfcc146101c557806355a3e90f146101e55780635f601a051461020e57600080fd5b80630359a5dd1461010e57806307267e5e1461013057806308ac6601146101505780631e154e9f14610158575b600080fd5b34801561011a57600080fd5b5061012e610129366004612ddd565b61031c565b005b34801561013c57600080fd5b5061012e61014b366004612e12565b61035b565b61012e61039b565b34801561016457600080fd5b5061012e610173366004612fb4565b6105a4565b34801561018457600080fd5b5061018d610838565b60405161019c9392919061316a565b60405180910390f35b3480156101b157600080fd5b5061012e6101c03660046131f1565b6109e4565b3480156101d157600080fd5b5061012e6101e036600461322d565b610a3e565b3480156101f157600080fd5b50604051600080516020613678833981519152815260200161019c565b34801561021a57600080fd5b50610223610b5b565b60405161019c9190613294565b34801561023c57600080fd5b50610245610bd3565b60405161019c91906132ce565b61012e610c2a565b34801561026657600080fd5b5061012e610cfc565b34801561027b57600080fd5b5061012e61028a366004613306565b61136e565b6102a261029d3660046133d2565b611488565b604051901515815260200161019c565b3480156102be57600080fd5b5061012e6102cd36600461322d565b611542565b3480156102de57600080fd5b5061012e611659565b3480156102f357600080fd5b5061012e610302366004612ddd565b611a23565b34801561031357600080fd5b50610223611a44565b8151600155602082015160029081558151829160039161033e91839190612abb565b5060208201516103549060028084019190612abb565b5050505050565b81518290601f9061036f9082906002612abb565b5060208201516103859060028084019190612abb565b5060239150610396905082826134e6565b505050565b610504600080815481106103b1576103b16135a4565b6000918252602091829020604080518082018252600690930290910180548352600101549282019290925281516080810183529091600390829081018260028282826020028201915b8154815260200190600101908083116103fa57505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161043057505050919092525050604080518082019091526001548152600254602082015261046d9150611aa0565b60008081548110610480576104806135a4565b60009182526020909120604080516080810180835290936006029092016002908101928492830191849182845b8154815260200190600101908083116104ad57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116104e357505050505081525050611b2d565b1561055857601e8054600181018255600091909152602081047f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35001805460ff601f9093166101000a92830219169091179055565b601e80546001810182556000919091527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e35060208204018054601f9092166101000a60ff02199091169055565b60005b87518110156105ef57602a8882815181106105c4576105c46135a4565b60209081029190910181015182546001818101855560009485529290932090920191909155016105a7565b5085516025556020860151602655610605612af9565b61060d612b4d565b60005b875181101561082c5786818151811061062b5761062b6135a4565b6020026020010151836000018190525085818151811061064d5761064d6135a4565b6020026020010151836020018190525084818151811061066f5761066f6135a4565b6020026020010151836040018181525050838181518110610692576106926135a4565b60200260200101518360600181815250508781815181106106b5576106b56135a4565b60209081029190910181015183528281018481526027805460018082018355600092909252855180517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195b6008909302928301558401517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195c8201559151805180517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195d8501558401517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195e8401558084015180517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710195f850155909301517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a710196083015560408301517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a71019618301556060909201517f98a476f1687bc3d60a2da2adbcba2c46958e61fa2fb4042cd7bc5816a71019629091015501610610565b50505050505050505050565b610840612b7b565b604080516080810182526060918291601f916023916029918490829081018260028282826020028201915b81548152602001906001019080831161086b57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116108a15750505050508152505092508180546108cb90613465565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790613465565b80156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b828210156109d35760008481526020908190206040805160808101825260048602909201805483830190815260018083015460608601529084528251808401909352600282015483526003909101548285015282840191909152908352909201910161096c565b505050509050925092509250909192565b60005b8151811015610a3a57600d828281518110610a0457610a046135a4565b602090810291909101810151825460018181018555600094855293839020825160029092020190815591015190820155016109e7565b5050565b610a46612b9b565b60005b8351811015610b5557838181518110610a6457610a646135a4565b60200260200101518260000181905250828181518110610a8657610a866135a4565b6020908102919091018101518382019081526029805460018082018355600092909252855180517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caac6004909302928301558401517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caad820155915180517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caae840155909201517fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caaf9091015501610a49565b50505050565b60606028805480602002602001604051908101604052809291908181526020018280548015610bc957602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411610b985790505b5050505050905090565b6060602a805480602002602001604051908101604052809291908181526020018280548015610bc957602002820191906000526020600020905b815481526020019060010190808311610c0d575050505050905090565b61050460008081548110610c4057610c406135a4565b6000918252602091829020604080518082018252600690930290910180548352600101549282019290925281516080810183529091600990829081018260028282826020028201915b815481526020019060010190808311610c8957505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610cbf57505050919092525050604080518082019091526007548152600854602082015261046d9150611aa0565b60408051808201909152600080825260208201526040805180820190915260008082526020820152610d2c612b7b565b610d34612b7b565b60005b60275481101561035457604080518082019091526025548152602654602082015260248054610daf9291610daa9185908110610d7557610d756135a4565b906000526020600020906004020160000160405180604001604052908160008201548152602001600182015481525050611aa0565b611c38565b9350610e79602a8281548110610dc757610dc76135a4565b906000526020600020015460008081548110610de557610de56135a4565b600091825260209091206002600690920201016001015460008081548110610e0f57610e0f6135a4565b600091825260208220600260069092020101015460008081548110610e3657610e366135a4565b600091825260209091206004600690920201016001015460008081548110610e6057610e606135a4565b6000918252602082206004600690920201010154611c98565b865160208089018051938452928101939093529283529181019290925284518083015190519151928301519251610eb39391929190611d42565b865160208089015192835291820192909252918152015260008054610f9691906001908110610ee457610ee46135a4565b60009182526020909120600260069092020101600101546000600181548110610f0f57610f0f6135a4565b60009182526020822060026006909202010101546000600181548110610f3757610f376135a4565b60009182526020909120600460069092020101600101546000600181548110610f6257610f626135a4565b6000918252602091829020600460069290920201015488518083015190518a84015193840151935192939192909190611dce565b8551602080880151928352918201929092529181520152600080546110959186918190610fc557610fc56135a4565b60009182526020909120604080516080810180835290936006029092016002908101928492830191849182845b815481526020019060010190808311610ff257505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116110285750505050508152505061108f6027858154811061105a5761105a6135a4565b906000526020600020906008020160000160405180604001604052908160008201548152602001600182015481525050611aa0565b85611b2d565b1561131b576040805180820190915260015481526002546020820152600d80546111139291610daa91859081106110ce576110ce6135a4565b60009182526020918290206040805180820182526002909302909101805483526001015482840152805180820190915260075481526008549281019290925290611c38565b94506112c36000808154811061112b5761112b6135a4565b9060005260206000209060060201600001604051806040016040529081600082015481526020016001820154815250506024838154811061116e5761116e6135a4565b906000526020600020906004020160000160405180604001604052908160008201548152602001600182015481525050602784815481106111b1576111b16135a4565b90600052602060002090600802016002016000016040518060400160405290816000820154815260200160018201548152505088602486815481106111f8576111f86135a4565b9060005260206000209060040201600201604051806040016040529081600082015481526020016001820154815250506027878154811061123b5761123b6135a4565b90600052602060002090600802016002016002016040518060400160405290816000820154815260200160018201548152505060278881548110611281576112816135a4565b906000526020600020906008020160020160040154602789815481106112a9576112a96135a4565b906000526020600020906008020160020160050154611488565b156113165760288054600181018255600091909152602081047fe16da923a2d88192e5070f37b4571d58682c0d66212ec634d495f33de3f77ab501805460ff601f9093166101000a928302191690911790555b611366565b602880546001810182556000919091527fe16da923a2d88192e5070f37b4571d58682c0d66212ec634d495f33de3f77ab560208204018054601f9092166101000a60ff021990911690555b600101610d37565b611376612bda565b60005b8351811015610b5557838181518110611394576113946135a4565b602002602001015182600001819052508281815181106113b6576113b66135a4565b602090810291909101810151838201908152600080546001810182559080528451805160069092027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56381019283559301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5648401559051805185937f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56501906114619082906002612abb565b5060208201516114779060028084019190612abb565b505060019093019250611379915050565b6000806114958a84611f01565b905060006114a38a86611f01565b905060006114b18986611f01565b905060006114bf8988611f01565b905060006114cd8585611c38565b905060006114db8484611c38565b82518e519192501415806114f7575081602001518d6020015114155b80611504575080518a5114155b80611517575080602001518a6020015114155b1561152b5760009650505050505050611536565b600196505050505050505b98975050505050505050565b61154a612b9b565b60005b8351811015610b5557838181518110611568576115686135a4565b6020026020010151826000018190525082818151811061158a5761158a6135a4565b6020908102919091018101518382019081526024805460018082018355600092909252855180517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec46004909302928301558401517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec5820155915180517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec6840155909201517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec7909101550161154d565b60005b602954811015611a20576118a76116b46029838154811061167f5761167f6135a4565b906000526020600020906004020160020160405180604001604052908160008201548152602001600182015481525050611aa0565b600080815481106116c7576116c76135a4565b60009182526020909120604080516080810180835290936006029092016002908101928492830191849182845b8154815260200190600101908083116116f457505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161172a5750505050508152505060298481548110611759576117596135a4565b6000918252602091829020604080518082018252600490930290910180548352600101549282019290925281516080810183529091600390829081018260028282826020028201915b8154815260200190600101908083116117a257505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116117d85750505050508152505060298681548110611807576118076135a4565b6000918252602091829020604080518082018252600490930290910180548352600101549282019290925281516080810183529091600990829081018260028282826020028201915b81548152602001906001019080831161185057505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161188657505050505081525050611f4e565b611a1857602a5481106118f65760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015260640160405180910390fd5b602a8054611906906001906135d0565b81548110611916576119166135a4565b9060005260206000200154602a8281548110611934576119346135a4565b60009182526020909120015560298054611950906001906135d0565b81548110611960576119606135a4565b906000526020600020906004020160298281548110611981576119816135a4565b6000918252602090912082546004909202019081556001808301549082015560028083015490820155600391820154910155602a8054806119c4576119c46135e3565b6001900381819060005260206000200160009055905560298054806119eb576119eb6135e3565b60008281526020812060046000199093019283020181815560018101829055600281018290556003015590555b60010161165c565b50565b815160075560208201516008558051819060099061033e9082906002612abb565b6060601e805480602002602001604051908101604052809291908181526020018280548015610bc9576000918252602091829020805460ff1615158452908202830192909160019101808411610b985790505050505050905090565b6040805180820190915260008082526020820152815160008051602061367883398151915290158015611ad557506020830151155b15611af55750506040805180820190915260008082526020820152919050565b604051806040016040528084600001518152602001828560200151611b1a919061360f565b611b2490846135d0565b90529392505050565b60408051600280825260608201909252600091829190816020015b6040805180820190915260008082526020820152815260200190600190039081611b485750506040805160028082526060820190925291925060009190602082015b611b92612b7b565b815260200190600190039081611b8a5790505090508682600081518110611bbb57611bbb6135a4565b60200260200101819052508482600181518110611bda57611bda6135a4565b60200260200101819052508581600081518110611bf957611bf96135a4565b60200260200101819052508381600181518110611c1857611c186135a4565b6020026020010181905250611c2d8282612099565b979650505050505050565b6040805180820190915260008082526020820152611c54612c03565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080611c9057600080fd5b505092915050565b6000808080600188158015611cab575087155b8015611cb5575086155b8015611cbf575085155b15611cd35750600197508795506000611ceb565b611cdf89898989612368565b611ceb57611ceb613623565b6000611cfd8b8b8b8b8b87600061241b565b9050611d2d8160005b602090810291909101519083015160408401516060850151608086015160a0870151612493565b929e919d509b50909950975050505050505050565b600080808060008051602061367883398151915288158015611d62575087155b8015611d6c575086155b8015611d76575085155b15611d8f57600080600080945094509450945050611dc3565b8888611d9b838a61360f565b611da590846135d0565b611daf848a61360f565b611db990856135d0565b9450945094509450505b945094509450949050565b60008080808b158015611ddf57508a155b8015611de9575089155b8015611df3575088155b15611e445787158015611e04575086155b8015611e0e575085155b8015611e18575084155b611e3457611e2888888888612368565b611e3457611e34613623565b5086925085915084905083611ef2565b87158015611e50575086155b8015611e5a575085155b8015611e64575084155b15611e9157611e758c8c8c8c612368565b611e8157611e81613623565b508a925089915088905087611ef2565b611e9d8c8c8c8c612368565b611ea957611ea9613623565b611eb588888888612368565b611ec157611ec1613623565b6000611edb8d8d8d8d600160008f8f8f8f600160006124dd565b9050611ee8816000611d06565b9450945094509450505b98509850985098945050505050565b6040805180820190915260008082526020820152611f1d612c21565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080611c9057600080fd5b60408051600380825260808201909252600091829190816020015b6040805180820190915260008082526020820152815260200190600190039081611f695750506040805160038082526080820190925291925060009190602082015b611fb3612b7b565b815260200190600190039081611fab5790505090508882600081518110611fdc57611fdc6135a4565b60200260200101819052508682600181518110611ffb57611ffb6135a4565b6020026020010181905250848260028151811061201a5761201a6135a4565b60200260200101819052508781600081518110612039576120396135a4565b60200260200101819052508581600181518110612058576120586135a4565b60200260200101819052508381600281518110612077576120776135a4565b602002602001018190525061208c8282612099565b9998505050505050505050565b600081518351146120a957600080fd5b825160006120b8826006613639565b90506000816001600160401b038111156120d4576120d4612cae565b6040519080825280602002602001820160405280156120fd578160200160208202803683370190505b50905060005b8381101561232e5786818151811061211d5761211d6135a4565b602002602001015160000151828260066121379190613639565b612142906000613650565b81518110612152576121526135a4565b602002602001018181525050868181518110612170576121706135a4565b6020026020010151602001518282600661218a9190613639565b612195906001613650565b815181106121a5576121a56135a4565b6020026020010181815250508581815181106121c3576121c36135a4565b60209081029190910101515151826121dc836006613639565b6121e7906002613650565b815181106121f7576121f76135a4565b602002602001018181525050858181518110612215576122156135a4565b60209081029190910181015151015182612230836006613639565b61223b906003613650565b8151811061224b5761224b6135a4565b602002602001018181525050858181518110612269576122696135a4565b602002602001015160200151600060028110612287576122876135a4565b602002015182612298836006613639565b6122a3906004613650565b815181106122b3576122b36135a4565b6020026020010181815250508581815181106122d1576122d16135a4565b6020026020010151602001516001600281106122ef576122ef6135a4565b602002015182612300836006613639565b61230b906005613650565b8151811061231b5761231b6135a4565b6020908102919091010152600101612103565b50612337612c3f565b6000602082602086026020860160086107d05a03fa90508061235857600080fd5b5051151593505050505b92915050565b600080600080600061237c87878989612766565b909450925061238d89898181612766565b909250905061239e82828b8b612766565b90925090506123af848484846127d7565b90945092506123ff84847f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e57e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d26127d7565b90945092508315801561208c5750509015979650505050505050565b612423612c5d565b8715611c2d576001881615612464578051602082015160408301516060840151608085015160a08601516124619594939291908d8d8d8d8d8d6124dd565b90505b612472878787878787612819565b949b5092995090975095509350915061248c600289613663565b9750612423565b6000806000806000806124a68888612988565b90925090506124b78c8c8484612766565b90965094506124c88a8a8484612766565b969d959c509a50949850929650505050505050565b6124e5612c5d565b881580156124f1575087155b15612533578686868686868660005b60a08901929092526080880192909252606087019290925260408601929092526020858101939093529091020152612756565b8215801561253f575081155b15612552578c8c8c8c8c8c866000612500565b61255e85858b8b612766565b909550935061256f8b8b8585612766565b6060830152604082015261258587878b8b612766565b90975095506125968d8d8585612766565b60a083015260808201819052871480156125b3575060a081015186145b156125f8576040810151851480156125ce5750606081015184145b156125e9576125e18d8d8d8d8d8d612819565b866000612500565b60016000818180808681612500565b61260489898585612766565b9093509150612624858583600260200201518460035b60200201516127d7565b909d509b5061263e8787836004602002015184600561261a565b909b50995061264f8b8b8181612766565b909950975061266f898983600460200201518460055b6020020151612766565b909550935061268089898d8d612766565b909950975061269189898585612766565b60a083015260808201526126a78d8d8181612766565b90975095506126b887878585612766565b90975095506126c987878b8b6127d7565b90975095506126da85856002612a13565b90935091506126eb878785856127d7565b90975095506126fc8b8b8989612766565b6020830152815261270f858589896127d7565b909b5099506127208d8d8d8d612766565b909b50995061273a89898360026020020151846003612665565b909d509b5061274b8b8b8f8f6127d7565b606083015260408201525b9c9b505050505050505050505050565b6000806127a4600080516020613678833981519152858809600080516020613678833981519152858809600080516020613678833981519152612a46565b60008051602061367883398151915280868809600080516020613678833981519152868a09089150915094509492505050565b6000806127f38685600080516020613678833981519152612a46565b61280c8685600080516020613678833981519152612a46565b9150915094509492505050565b60008060008060008061282e8c8c6003612a13565b909650945061283f86868e8e612766565b90965094506128508a8a8a8a612766565b90985096506128618c8c8c8c612766565b909450925061287284848a8a612766565b909450925061288386868181612766565b909c509a5061289484846008612a13565b90925090506128a58c8c84846127d7565b909c509a506128b688888181612766565b90925090506128c784846004612a13565b90945092506128d884848e8e6127d7565b90945092506128e984848888612766565b90945092506128fa8a8a6008612a13565b909650945061290b86868c8c612766565b909650945061291c86868484612766565b909650945061292d848488886127d7565b909450925061293e8c8c6002612a13565b909650945061294f86868a8a612766565b909650945061296088888484612766565b909250905061297182826008612a13565b809250819350505096509650965096509650969050565b600080806129c96000805160206136788339815191528087880960008051602061367883398151915287880908600080516020613678833981519152612a6a565b9050600080516020613678833981519152818609600080516020613678833981519152828609612a07906000805160206136788339815191526135d0565b92509250509250929050565b60008060008051602061367883398151915283860960008051602061367883398151915284860991509150935093915050565b60008180612a5657612a566135f9565b612a6084846135d0565b8508949350505050565b60008060405160208152602080820152602060408201528460608201526002840360808201528360a082015260208160c08360056107d05a03fa90519250905080612ab457600080fd5b5092915050565b8260028101928215612ae9579160200282015b82811115612ae9578251825591602001919060010190612ace565b50612af5929150612c7b565b5090565b6040805160c0810190915260006080820181815260a083019190915281908152602001612b39604051806040016040528060008152602001600081525090565b815260200160008152602001600081525090565b604080516080810182526000918101828152606082019290925290815260208101612b76612af9565b905290565b6040518060400160405280612b8e612c90565b8152602001612b76612c90565b60408051608081018252600091810182815260608201929092529081908152602001612b76604051806040016040528060008152602001600081525090565b604080516080810182526000918101828152606082019290925290815260208101612b76612b7b565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b5b80821115612af55760008155600101612c7c565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612ce657612ce6612cae565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612d1457612d14612cae565b604052919050565b600060408284031215612d2e57600080fd5b612d36612cc4565b823581526020928301359281019290925250919050565b600082601f830112612d5e57600080fd5b612d66612cc4565b806040840185811115612d7857600080fd5b845b81811015612d92578035845260209384019301612d7a565b509095945050505050565b600060808284031215612daf57600080fd5b612db7612cc4565b9050612dc38383612d4d565b8152612dd28360408401612d4d565b602082015292915050565b60008060c08385031215612df057600080fd5b612dfa8484612d1c565b9150612e098460408501612d9d565b90509250929050565b60008060a08385031215612e2557600080fd5b612e2f8484612d9d565b915060808301356001600160401b03811115612e4a57600080fd5b8301601f81018513612e5b57600080fd5b80356001600160401b03811115612e7457612e74612cae565b612e87601f8201601f1916602001612cec565b818152866020838501011115612e9c57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60006001600160401b03821115612ed557612ed5612cae565b5060051b60200190565b600082601f830112612ef057600080fd5b8135612f03612efe82612ebc565b612cec565b8082825260208201915060208360051b860101925085831115612f2557600080fd5b602085015b83811015612f42578035835260209283019201612f2a565b5095945050505050565b600082601f830112612f5d57600080fd5b8135612f6b612efe82612ebc565b8082825260208201915060208360061b860101925085831115612f8d57600080fd5b602085015b83811015612f4257612fa48782612d1c565b8352602090920191604001612f92565b6000806000806000806000610100888a031215612fd057600080fd5b87356001600160401b03811115612fe657600080fd5b612ff28a828b01612edf565b9750506130028960208a01612d1c565b955060608801356001600160401b0381111561301d57600080fd5b6130298a828b01612f4c565b95505060808801356001600160401b0381111561304557600080fd5b6130518a828b01612f4c565b94505060a08801356001600160401b0381111561306d57600080fd5b6130798a828b01612f4c565b93505060c08801356001600160401b0381111561309557600080fd5b6130a18a828b01612edf565b92505060e08801356001600160401b038111156130bd57600080fd5b6130c98a828b01612edf565b91505092959891949750929550565b8060005b6002811015610b555781518452602093840193909101906001016130dc565b600081518084526020840193506020830160005b8281101561316057815161312e87825180518252602090810151910152565b60200151613149604088018280518252602090810151910152565b50608095909501946020919091019060010161310f565b5093949350505050565b6131758185516130d8565b6000602085015161318960408401826130d8565b5060c0608083015283518060c084015260005b818110156131b957602081870181015160e086840101520161319c565b50600060e08285010152601f19601f8201168301905060e08382030160a08401526131e760e08201856130fb565b9695505050505050565b60006020828403121561320357600080fd5b81356001600160401b0381111561321957600080fd5b61322584828501612f4c565b949350505050565b6000806040838503121561324057600080fd5b82356001600160401b0381111561325657600080fd5b61326285828601612f4c565b92505060208301356001600160401b0381111561327e57600080fd5b61328a85828601612f4c565b9150509250929050565b602080825282518282018190526000918401906040840190835b81811015612d9257835115158352602093840193909201916001016132ae565b602080825282518282018190526000918401906040840190835b81811015612d925783518352602093840193909201916001016132e8565b6000806040838503121561331957600080fd5b82356001600160401b0381111561332f57600080fd5b61333b85828601612f4c565b92505060208301356001600160401b0381111561335757600080fd5b8301601f8101851361336857600080fd5b8035613376612efe82612ebc565b8082825260208201915060208360071b85010192508783111561339857600080fd5b6020840193505b828410156133c4576133b18885612d9d565b825260208201915060808401935061339f565b809450505050509250929050565b6000806000806000806000806101c0898b0312156133ef57600080fd5b6133f98a8a612d1c565b97506134088a60408b01612d1c565b96506134178a60808b01612d1c565b95506134268a60c08b01612d1c565b94506134368a6101008b01612d1c565b93506134468a6101408b01612d1c565b979a9699509497939692959294505050610180820135916101a0013590565b600181811c9082168061347957607f821691505b60208210810361349957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561039657806000526020600020601f840160051c810160208510156134c65750805b601f840160051c820191505b8181101561035457600081556001016134d2565b81516001600160401b038111156134ff576134ff612cae565b6135138161350d8454613465565b8461349f565b6020601f821160018114613547576000831561352f5750848201515b600019600385901b1c1916600184901b178455610354565b600084815260208120601f198516915b828110156135775787850151825560209485019460019092019101613557565b50848210156135955786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115612362576123626135ba565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261361e5761361e6135f9565b500690565b634e487b7160e01b600052600160045260246000fd5b8082028115828204841417612362576123626135ba565b80820180821115612362576123626135ba565b600082613672576136726135f9565b50049056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220964b41fc3fe5353e777666c5578765578a1374edbf2bdcc8237176426566f45a64736f6c634300081a0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCaller) GetFieldModulus(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetFieldModulus")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCallerSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractCaller) GetIndex(opts *bind.CallOpts) ([]*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetIndex")

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractSession) GetIndex() ([]*big.Int, error) {
	return _Contract.Contract.GetIndex(&_Contract.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractCallerSession) GetIndex() ([]*big.Int, error) {
	return _Contract.Contract.GetIndex(&_Contract.CallOpts)
}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCaller) GetReCipher(opts *bind.CallOpts) (VerificationG2Point, string, []VerificationReCipher, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetReCipher")

	if err != nil {
		return *new(VerificationG2Point), *new(string), *new([]VerificationReCipher), err
	}

	out0 := *abi.ConvertType(out[0], new(VerificationG2Point)).(*VerificationG2Point)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)
	out2 := *abi.ConvertType(out[2], new([]VerificationReCipher)).(*[]VerificationReCipher)

	return out0, out1, out2, err

}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractSession) GetReCipher() (VerificationG2Point, string, []VerificationReCipher, error) {
	return _Contract.Contract.GetReCipher(&_Contract.CallOpts)
}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCallerSession) GetReCipher() (VerificationG2Point, string, []VerificationReCipher, error) {
	return _Contract.Contract.GetReCipher(&_Contract.CallOpts)
}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool[])
func (_Contract *ContractCaller) GetReKeysResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetReKeysResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool[])
func (_Contract *ContractSession) GetReKeysResult() ([]bool, error) {
	return _Contract.Contract.GetReKeysResult(&_Contract.CallOpts)
}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetReKeysResult() ([]bool, error) {
	return _Contract.Contract.GetReKeysResult(&_Contract.CallOpts)
}

// GetVKResult is a free data retrieval call binding the contract method 0xf54de465.
//
// Solidity: function GetVKResult() view returns(bool[])
func (_Contract *ContractCaller) GetVKResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetVKResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetVKResult is a free data retrieval call binding the contract method 0xf54de465.
//
// Solidity: function GetVKResult() view returns(bool[])
func (_Contract *ContractSession) GetVKResult() ([]bool, error) {
	return _Contract.Contract.GetVKResult(&_Contract.CallOpts)
}

// GetVKResult is a free data retrieval call binding the contract method 0xf54de465.
//
// Solidity: function GetVKResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetVKResult() ([]bool, error) {
	return _Contract.Contract.GetVKResult(&_Contract.CallOpts)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0xd6c6a252.
//
// Solidity: function ReCipherVerify() returns()
func (_Contract *ContractTransactor) ReCipherVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "ReCipherVerify")
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0xd6c6a252.
//
// Solidity: function ReCipherVerify() returns()
func (_Contract *ContractSession) ReCipherVerify() (*types.Transaction, error) {
	return _Contract.Contract.ReCipherVerify(&_Contract.TransactOpts)
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0xd6c6a252.
//
// Solidity: function ReCipherVerify() returns()
func (_Contract *ContractTransactorSession) ReCipherVerify() (*types.Transaction, error) {
	return _Contract.Contract.ReCipherVerify(&_Contract.TransactOpts)
}

// ReKeysVerify is a paid mutator transaction binding the contract method 0x9a20745c.
//
// Solidity: function ReKeysVerify() returns()
func (_Contract *ContractTransactor) ReKeysVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "ReKeysVerify")
}

// ReKeysVerify is a paid mutator transaction binding the contract method 0x9a20745c.
//
// Solidity: function ReKeysVerify() returns()
func (_Contract *ContractSession) ReKeysVerify() (*types.Transaction, error) {
	return _Contract.Contract.ReKeysVerify(&_Contract.TransactOpts)
}

// ReKeysVerify is a paid mutator transaction binding the contract method 0x9a20745c.
//
// Solidity: function ReKeysVerify() returns()
func (_Contract *ContractTransactorSession) ReKeysVerify() (*types.Transaction, error) {
	return _Contract.Contract.ReKeysVerify(&_Contract.TransactOpts)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractTransactor) UploadCiphertext(opts *bind.TransactOpts, c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadCiphertext", c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractSession) UploadCiphertext(c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractTransactorSession) UploadCiphertext(c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactor) UploadDRsKey(opts *bind.TransactOpts, pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDRsKey", pkArray)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractSession) UploadDRsKey(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDRsKey(&_Contract.TransactOpts, pkArray)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactorSession) UploadDRsKey(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDRsKey(&_Contract.TransactOpts, pkArray)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactor) UploadOwnerKey(opts *bind.TransactOpts, pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadOwnerKey", pk, vk)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractSession) UploadOwnerKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerKey(&_Contract.TransactOpts, pk, vk)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactorSession) UploadOwnerKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerKey(&_Contract.TransactOpts, pk, vk)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x5307dfcc.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c2, (uint256,uint256)[] c3) returns()
func (_Contract *ContractTransactor) UploadReCipher(opts *bind.TransactOpts, c2 []VerificationG1Point, c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadReCipher", c2, c3)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x5307dfcc.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c2, (uint256,uint256)[] c3) returns()
func (_Contract *ContractSession) UploadReCipher(c2 []VerificationG1Point, c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReCipher(&_Contract.TransactOpts, c2, c3)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x5307dfcc.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c2, (uint256,uint256)[] c3) returns()
func (_Contract *ContractTransactorSession) UploadReCipher(c2 []VerificationG1Point, c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReCipher(&_Contract.TransactOpts, c2, c3)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xc4bd0aba.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1) returns()
func (_Contract *ContractTransactor) UploadReKeys(opts *bind.TransactOpts, rks0 []VerificationG1Point, rks1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadReKeys", rks0, rks1)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xc4bd0aba.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1) returns()
func (_Contract *ContractSession) UploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeys(&_Contract.TransactOpts, rks0, rks1)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xc4bd0aba.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1) returns()
func (_Contract *ContractTransactorSession) UploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeys(&_Contract.TransactOpts, rks0, rks1)
}

// UploadReKeysProof is a paid mutator transaction binding the contract method 0x1e154e9f.
//
// Solidity: function UploadReKeysProof(uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactor) UploadReKeysProof(opts *bind.TransactOpts, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadReKeysProof", I, commitment, witness, a1, a2, c, z)
}

// UploadReKeysProof is a paid mutator transaction binding the contract method 0x1e154e9f.
//
// Solidity: function UploadReKeysProof(uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractSession) UploadReKeysProof(I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeysProof(&_Contract.TransactOpts, I, commitment, witness, a1, a2, c, z)
}

// UploadReKeysProof is a paid mutator transaction binding the contract method 0x1e154e9f.
//
// Solidity: function UploadReKeysProof(uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactorSession) UploadReKeysProof(I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeysProof(&_Contract.TransactOpts, I, commitment, witness, a1, a2, c, z)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractTransactor) UploadSystemKey(opts *bind.TransactOpts, tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadSystemKey", tau1, tau2)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractSession) UploadSystemKey(tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadSystemKey(&_Contract.TransactOpts, tau1, tau2)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractTransactorSession) UploadSystemKey(tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadSystemKey(&_Contract.TransactOpts, tau1, tau2)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactor) UploadUserKey(opts *bind.TransactOpts, pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadUserKey", pk, vk)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractSession) UploadUserKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserKey(&_Contract.TransactOpts, pk, vk)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactorSession) UploadUserKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserKey(&_Contract.TransactOpts, pk, vk)
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() payable returns()
func (_Contract *ContractTransactor) VKoVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VKoVerify")
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() payable returns()
func (_Contract *ContractSession) VKoVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKoVerify(&_Contract.TransactOpts)
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() payable returns()
func (_Contract *ContractTransactorSession) VKoVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKoVerify(&_Contract.TransactOpts)
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() payable returns()
func (_Contract *ContractTransactor) VKuVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VKuVerify")
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() payable returns()
func (_Contract *ContractSession) VKuVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKuVerify(&_Contract.TransactOpts)
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() payable returns()
func (_Contract *ContractTransactorSession) VKuVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKuVerify(&_Contract.TransactOpts)
}
