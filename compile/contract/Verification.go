// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerificationG1Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG1Point struct {
	X *big.Int
	Y *big.Int
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"DLEQVerifyCKeys\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"DLEQVerifyDis\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVrfResult\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MDA_i\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"success\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"failed\",\"type\":\"uint256[]\"}],\"name\":\"Submit_verification_results\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"CV_i\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"EV_i\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"RP_i\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TTP_register\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"ckeys\",\"type\":\"tuple[]\"}],\"name\":\"UploadCKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"c0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"c1\",\"type\":\"tuple\"}],\"name\":\"UploadCiphertext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"UploadDLEQProofCKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_c\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"_a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_z\",\"type\":\"uint256[]\"}],\"name\":\"UploadDLEQProofKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"Dis\",\"type\":\"tuple\"}],\"name\":\"UploadDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"UploadDisputeProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"EKeys0\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"EKeys1\",\"type\":\"tuple[]\"}],\"name\":\"UploadEKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"generator\",\"type\":\"tuple\"}],\"name\":\"UploadGenerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"gs\",\"type\":\"tuple[]\"}],\"name\":\"UploadGs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"UploadOwnerPk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"pkArray\",\"type\":\"tuple[]\"}],\"name\":\"UploadTTPsPk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"}],\"name\":\"UploadUserPk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"commitments\",\"type\":\"tuple[]\"}],\"name\":\"VSSVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"date_user_fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"date_user_pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"TTP_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"fail_distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"id2Addrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"date_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"date_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"new_task\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"query_TTP\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"query_date_user_fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"success_distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"task_failed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"task_success\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"task_id\",\"type\":\"uint256\"}],\"name\":\"updateCY_i\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x6080604052603260025560066003556003600455348015601e57600080fd5b506134478061002e6000396000f3fe6080604052600436106102045760003560e01c8063790ef68311610118578063ce8dfe43116100a0578063e4cf1c4c1161006f578063e4cf1c4c14610682578063e50b416b146106a2578063e78b152d146106b5578063f2c298be146106d5578063f716305e146106e857600080fd5b8063ce8dfe4314610628578063d295d51514610630578063d6c7bff014610646578063e2bbb1581461066f57600080fd5b80639dfb3053116100e75780639dfb305314610546578063b09e6f7014610585578063b7134dfa146105ae578063c0da47a6146105e6578063ce124c171461060657600080fd5b8063790ef683146104955780637c8d237d146104b557806385ae39ae146105065780639de592931461052657600080fd5b8063315f69441161019b57806354e119f91161016a57806354e119f9146103e057806364691d2b146104005780636a774235146104205780637210ddc214610440578063736cd6c01461046057600080fd5b8063315f69441461034c5780633e7de485146103755780634df7e3d014610395578063543e3d5c146103ab57600080fd5b80631fecdf53116101d75780631fecdf531461029757806327e35d8f146102f05780632d51382c146103035780633159aea51461032357600080fd5b806303f54f5314610209578063062fb9691461022b5780630dbe671f14610253578063138ca35e14610277575b600080fd5b34801561021557600080fd5b50610229610224366004612cd6565b610708565b005b61023e610239366004612cd6565b610c30565b60405190151581526020015b60405180910390f35b34801561025f57600080fd5b5061026960035481565b60405190815260200161024a565b34801561028357600080fd5b50610269610292366004612cef565b610ddf565b3480156102a357600080fd5b506102d86102b2366004612d57565b80516020818301810180516008825292820191909301209152546001600160a01b031681565b6040516001600160a01b03909116815260200161024a565b6102296102fe366004612cd6565b610e10565b34801561030f57600080fd5b5061026961031e366004612cd6565b610e86565b34801561032f57600080fd5b5061022961033e366004612e3d565b8051600d5560200151600e55565b34801561035857600080fd5b50610229610367366004612e3d565b8051600b5560200151600c55565b34801561038157600080fd5b50610229610390366004612f58565b610eb4565b3480156103a157600080fd5b5061026960045481565b3480156103b757600080fd5b506103cb6103c6366004613030565b61106d565b6040805192835260208301919091520161024a565b3480156103ec57600080fd5b506102296103fb36600461306f565b6111ed565b34801561040c57600080fd5b5061022961041b3660046130d6565b61130a565b34801561042c57600080fd5b5061022961043b3660046130d6565b611364565b34801561044c57600080fd5b5061026961045b366004612cd6565b6113ba565b34801561046c57600080fd5b5061022961047b366004613112565b815160105560209182015160115580516012550151601355565b3480156104a157600080fd5b506102296104b0366004612cd6565b6114f3565b3480156104c157600080fd5b506104d56104d0366004612cd6565b611aaf565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00161024a565b34801561051257600080fd5b506102296105213660046130d6565b611b8d565b34801561053257600080fd5b50610229610541366004612f58565b611be3565b34801561055257600080fd5b50610229610561366004613147565b8251601a55602092830151601b558151601c55910151601d55601e91909155601f55565b34801561059157600080fd5b506102296105a0366004612e3d565b805160095560200151600a55565b3480156105ba57600080fd5b506102696105c9366004612cef565b600560209081526000928352604080842090915290825290205481565b3480156105f257600080fd5b5061022961060136600461318d565b611d94565b34801561061257600080fd5b5061061b611dd3565b60405161024a91906131fd565b61023e611e4b565b34801561063c57600080fd5b5061026960025481565b34801561065257600080fd5b50610229610661366004612e3d565b805160185560200151601955565b61022961067d366004612cef565b612173565b34801561068e57600080fd5b5061026961069d366004612cef565b6122ea565b61023e6106b03660046130d6565b612306565b3480156106c157600080fd5b506102296106d0366004612cd6565b6124b8565b61023e6106e3366004612d57565b612776565b3480156106f457600080fd5b50610269610703366004613242565b6127c0565b60008181526006602090815260408083208054825181850281018501909352808352919290919083018282801561075e57602002820191906000526020600020905b81548152602001906001019080831161074a575b505050505090506000600760008481526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156107c457602002820191906000526020600020905b8154815260200190600101908083116107b0575b50505050509050600183815481106107de576107de613284565b90600052602060002090600d0201600501548251106108445760405162461bcd60e51b815260206004820152601b60248201527f5265636f726420697320616c726561647920636f6d706c65746564000000000060448201526064015b60405180910390fd5b60005b81518110156109ca5760008083838151811061086557610865613284565b60200260200101518154811061087d5761087d613284565b600091825260208083206040805160a0810182526005948502909201805483526001810154938301939093526002830154908201819052600383015460608301526004909201546001600160a01b031660808201819052875191955093926064929184908990899081106108f3576108f3613284565b6020026020010151815260200190815260200160002060008a81526020019081526020016000205461092591906132b0565b61092f91906132e3565b6040519091506001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610968573d6000803e3d6000fd5b50806005600087878151811061098057610980613284565b60200260200101518152602001908152602001600020600089815260200190815260200160002060008282546109b691906132f7565b909155505060019093019250610847915050565b506000805b8251811015610a2b57600560008483815181106109ee576109ee613284565b6020026020010151815260200190815260200160002060008681526020019081526020016000205482610a21919061330a565b91506001016109cf565b50600083516001610a3c919061330a565b610a4690836132e3565b905060005b8451811015610b6e57600080868381518110610a6957610a69613284565b602002602001015181548110610a8157610a81613284565b600091825260208083206040805160a081018252600594850290920180548352600181015493830193909352600283015490820152600382015460608201526004909101546001600160a01b03166080820181905289519194509291869183908b9088908110610af357610af3613284565b6020026020010151815260200190815260200160002060008b815260200190815260200160002054610b25919061330a565b6040519091506001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610b5e573d6000803e3d6000fd5b505060019092019150610a4b9050565b50600060018681548110610b8457610b84613284565b6000918252602082206002600d909202010154600180546001600160a01b039092169350849189908110610bba57610bba613284565b90600052602060002090600d0201600c0154610bd6919061330a565b6040519091506001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610c0f573d6000803e3d6000fd5b5060018781548110610c2357610c23613284565b5060005250505050505050565b604080518082019091526009548152600a546020820152601f546000918291610c599190612aa0565b60408051808201909152600d548152600e546020820152601e54919250600091610c839190612aa0565b90506000610ccf60208681548110610c9d57610c9d613284565b600091825260209182902060408051808201909152600490920201805482526001015491810191909152601f54612aa0565b6040805180820190915260185481526019546020820152601e54919250600091610cf99190612aa0565b90506000610d078585612af5565b90506000610d158484612af5565b8251601a54919250141580610d3057506020820151601b5414155b80610d3e57508051601c5414155b80610d4f57506020810151601d5414155b15610d975750506021805460018101825560009182526000805160206133f283398151915260208204018054601f9092166101000a60ff021990911690559695505050505050565b50506021805460018181018355600092909252602081046000805160206133f283398151915201805460ff601f9093166101000a928302191690911790559695505050505050565b60066020528160005260406000208181548110610dfb57600080fd5b90600052602060002001600091509150505481565b3460018281548110610e2457610e24613284565b90600052602060002090600d0201600c015414610e835760405162461bcd60e51b815260206004820152601c60248201527f54686520616d6f756e7420796f752073656e742069732077726f6e6700000000604482015260640161083b565b50565b600060018281548110610e9b57610e9b613284565b90600052602060002090600d0201600c01549050919050565b610ebc612b4d565b60005b855181101561106557858181518110610eda57610eda613284565b6020026020010151826040018181525050848181518110610efd57610efd613284565b60200260200101518260000181905250838181518110610f1f57610f1f613284565b60200260200101518260200181905250828181518110610f4157610f41613284565b602090810291909101810151606084019081526016805460018082018355600092909252855180517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242896006909302928301558401517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428a8201558584015180517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428b830155909301517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428c84015560408501517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428d84015590517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428e9092019190915501610ebf565b505050505050565b60008060008087600454611081919061331d565b60648789600354611092919061331d565b61109c919061331d565b6110a6919061334d565b6110b0919061337b565b90506002548113156110c4578091506110ca565b60025491505b50600080546040805160a081018252998a5260208a019889528901968752606089018381526001600160a01b0396871660808b0190815260018301845592805298517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600583029081019190915597517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56489015595517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56588015596517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56687015595517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56790950180546001600160a01b031916959093169490941790915550929050565b6111f5612ba1565b60005b83518110156113045783818151811061121357611213613284565b6020026020010151826000018190525082818151811061123557611235613284565b6020908102919091018101518382019081528154600180820184556000849052855180517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bb6004909402938401558401517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bc830155915180517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866bd830155909201517fc97bfaf2f8ee708c303a06d134f5ecd8389ae0432af62dc132a24118292866be90920191909155016111f8565b50505050565b60005b815181101561136057600f82828151811061132a5761132a613284565b6020908102919091018101518254600181810185556000948552938390208251600290920201908155910151908201550161130d565b5050565b60005b815181101561136057601482828151811061138457611384613284565b60209081029190910181015182546001818101855560009485529383902082516002909202019081559101519082015501611367565b600080805b600184815481106113d2576113d2613284565b90600052602060002090600d02016009018054905081101561146d5760006001858154811061140357611403613284565b90600052602060002090600d0201600901828154811061142557611425613284565b906000526020600020015490506000818154811061144557611445613284565b90600052602060002090600502016001015483611462919061330a565b9250506001016113bf565b506001838154811061148157611481613284565b90600052602060002090600d0201600301548161149e919061330a565b600184815481106114b1576114b1613284565b90600052602060002090600d0201600c0181905550600183815481106114d9576114d9613284565b90600052602060002090600d0201600c0154915050919050565b6001818154811061150657611506613284565b90600052602060002090600d0201600001546078611524919061330a565b42111561156c5760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b9bdd59da081d1a5b59481c185cdcd95960521b604482015260640161083b565b6000818152600660209081526040808320805482518185028101850190935280835291929091908301828280156115c257602002820191906000526020600020905b8154815260200190600101908083116115ae575b5050505050905060006007600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561162857602002820191906000526020600020905b815481526020019060010190808311611614575b505050505090506001838154811061164257611642613284565b90600052602060002090600d020160050154825110156116bc5760405162461bcd60e51b815260206004820152602f60248201527f546865206e756d626572206f662074747020686173206e6f742072656163686560448201526e19081d1a19481d1a1c995cda1bdb19608a1b606482015260840161083b565b60005b8151811015611842576000808383815181106116dd576116dd613284565b6020026020010151815481106116f5576116f5613284565b600091825260208083206040805160a0810182526005948502909201805483526001810154938301939093526002830154908201819052600383015460608301526004909201546001600160a01b0316608082018190528751919550939260649291849089908990811061176b5761176b613284565b6020026020010151815260200190815260200160002060008a81526020019081526020016000205461179d91906132b0565b6117a791906132e3565b6040519091506001600160a01b0383169082156108fc029083906000818181858888f193505050501580156117e0573d6000803e3d6000fd5b5080600560008787815181106117f8576117f8613284565b602002602001015181526020019081526020016000206000898152602001908152602001600020600082825461182e91906132f7565b9091555050600190930192506116bf915050565b506000805b82518110156118a3576005600084838151811061186657611866613284565b6020026020010151815260200190815260200160002060008681526020019081526020016000205482611899919061330a565b9150600101611847565b5060008351826118b391906132e3565b905060005b84518110156119e6576000808683815181106118d6576118d6613284565b6020026020010151815481106118ee576118ee613284565b600091825260208083206040805160a081018252600594850290920180548352600181015493830184905260028101549183019190915260038101546060830152600401546001600160a01b0316608082018190528a51919550939287929184908c908990811061196157611961613284565b6020026020010151815260200190815260200160002060008c815260200190815260200160002054611993919061330a565b61199d919061330a565b6040519091506001600160a01b0383169082156108fc029083906000818181858888f193505050501580156119d6573d6000803e3d6000fd5b5050600190920191506118b89050565b506000600186815481106119fc576119fc613284565b6000918252602082206001600d9092020181015481546001600160a01b03909116935088908110611a2f57611a2f613284565b90600052602060002090600d0201600301549050816001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015611a7c573d6000803e3d6000fd5b506001808881548110611a9157611a91613284565b90600052602060002090600d0201600a018190555050505050505050565b6000806000806000808681548110611ac957611ac9613284565b90600052602060002090600502016000015460008781548110611aee57611aee613284565b90600052602060002090600502016001015460008881548110611b1357611b13613284565b90600052602060002090600502016002015460008981548110611b3857611b38613284565b90600052602060002090600502016003015460008a81548110611b5d57611b5d613284565b6000918252602090912060059091020160040154939a92995090975095506001600160a01b039091169350915050565b60005b8151811015611360576015828281518110611bad57611bad613284565b60209081029190910181015182546001818101855560009485529383902082516002909202019081559101519082015501611b90565b611beb612b4d565b60005b855181101561106557848181518110611c0957611c09613284565b60200260200101518260000181905250838181518110611c2b57611c2b613284565b60200260200101518260200181905250858181518110611c4d57611c4d613284565b6020026020010151826040018181525050828181518110611c7057611c70613284565b602090810291909101810151606084019081526017805460018082018355600092909252855180517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c156006909302928301558401517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c168201558584015180517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c17830155909301517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1884015560408501517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1984015590517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1a9092019190915501611bee565b60008381526006602090815260409091208351611db392850190612be5565b506000838152600760209081526040909120825161130492840190612be5565b60606021805480602002602001604051908101604052809291908181526020018280548015611e4157602002820191906000526020600020906000905b825461010083900a900460ff161515815260206001928301818104948501949093039092029101808411611e105790505b5050505050905090565b6000805b60165481101561213257604080518082019091526009548152600a54602082015260168054600092611ea492909185908110611e8d57611e8d613284565b906000526020600020906006020160050154612aa0565b90506000611f1560148481548110611ebe57611ebe613284565b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505060168581548110611efe57611efe613284565b906000526020600020906006020160040154612aa0565b6040805180820190915260105481526011546020820152600f8054929350600092611f9592611f8292909188908110611f5057611f50613284565b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050612af5565b60168681548110611e8d57611e8d613284565b90506000611fef60158681548110611faf57611faf613284565b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505060168781548110611efe57611efe613284565b90506000611ffd8585612af5565b9050600061200b8484612af5565b905081600001516016888154811061202557612025613284565b600091825260209091206006909102015414158061206e575081602001516016888154811061205657612056613284565b90600052602060002090600602016000016001015414155b806120a257508051601680548990811061208a5761208a613284565b90600052602060002090600602016002016000015414155b806120d857508060200151601688815481106120c0576120c0613284565b90600052602060002090600602016002016001015414155b156121205750506021805460018101825560009182526000805160206133f283398151915260208204018054601f9092166101000a60ff021990911690559695505050505050565b505060019094019350611e4f92505050565b50506021805460018181018355600092909252602081046000805160206133f283398151915201805460ff601f9093166101000a9283021916909117905590565b600080838154811061218757612187613284565b600091825260208083206040805160a0810182526005948502909201805483526001810154838501526002810154838301526003810154606084018190526004909101546001600160a01b0316608084015288865293835280852087865290925292205491925090801561223d5760405162461bcd60e51b815260206004820152601a60248201527f596f75206861766520616c7265616479206465706f7369746564000000000000604482015260640161083b565b81341461228c5760405162461bcd60e51b815260206004820152601860248201527f596f75206d7573742073656e6420204544415f69207765690000000000000000604482015260640161083b565b6000858152600560209081526040808320878452909152902034905560018054859081106122bc576122bc613284565b600091825260208083206009600d909302019190910180546001810182559083529120019490945550505050565b60076020528160005260406000208181548110610dfb57600080fd5b6000805b60145481101561247557604080518082019091526000808252602082015260016000612336848361330a565b9050612355604051806040016040528060008152602001600081525090565b60005b87518110156123c05761238488828151811061237657612376613284565b602002602001015185612aa0565b91506123908583612af5565b94507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018385099350600101612358565b50835160148054879081106123d7576123d7613284565b90600052602060002090600202016000015414158061241e575083602001516014868154811061240957612409613284565b90600052602060002090600202016001015414155b156124655750506021805460018101825560009182526000805160206133f283398151915260208204018054601f9092166101000a60ff0219909116905595945050505050565b50506001909201915061230a9050565b50506021805460018181018355600092909252602081046000805160206133f283398151915201805460ff601f9093166101000a92830219169091179055919050565b60008181526006602090815260408083208054825181850281018501909352808352919290919083018282801561250e57602002820191906000526020600020905b8154815260200190600101908083116124fa575b5050505050905060006007600084815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561257457602002820191906000526020600020905b815481526020019060010190808311612560575b505050505090506001838154811061258e5761258e613284565b90600052602060002090600d0201600a01546001036126765760005b825181101561260e57600560008483815181106125c9576125c9613284565b6020026020010151815481106125e1576125e1613284565b9060005260206000209060050201600001600082825461260191906133a2565b90915550506001016125aa565b5060005b8151811015611304576002600083838151811061263157612631613284565b60200260200101518154811061264957612649613284565b90600052602060002090600502016000016000828254612669919061337b565b9091555050600101612612565b6001838154811061268957612689613284565b90600052602060002090600d0201600b01546001036127715760005b825181101561270957600560008483815181106126c4576126c4613284565b6020026020010151815481106126dc576126dc613284565b906000526020600020906005020160000160008282546126fc91906133a2565b90915550506001016126a5565b5060005b8151811015611304576005600083838151811061272c5761272c613284565b60200260200101518154811061274457612744613284565b90600052602060002090600502016000016000828254612764919061337b565b909155505060010161270d565b505050565b60003360088360405161278991906133c2565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055506001919050565b600061283f604051806101a001604052806000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016060815260200160008152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081525090565b4281526001600160a01b038087166020830152851660408201526060810184905260a081018390526000604051908082528060200260200182016040528015612892578160200160208202803683370190505b50608082019081526040805160008082526020808301845260c086019290925282518181528083018452610120860152610140850181905261016085018190526101808501819052600180548082018255915284517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600d909202918201908155828601517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7830180546001600160a01b03199081166001600160a01b0393841617909155948701517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88401805490961691161790935560608501517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98201559251805185946129e8937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa909101920190612c30565b5060a0820151600582015560c08201518051612a0e916006840191602090910190612be5565b5060e08201518051612a2a916007840191602090910190612be5565b506101008201518051612a47916008840191602090910190612be5565b506101208201518051612a64916009840191602090910190612be5565b50610140820151600a820155610160820151600b82015561018090910151600c9091015560018054612a9691906132f7565b9695505050505050565b6040805180820190915260008082526020820152612abc612c85565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080612aed57600080fd5b505092915050565b6040805180820190915260008082526020820152612b11612ca3565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080612aed57600080fd5b6040805160c0810190915260006080820181815260a083019190915281908152602001612b8d604051806040016040528060008152602001600081525090565b815260200160008152602001600081525090565b60408051608081018252600091810182815260608201929092529081908152602001612be0604051806040016040528060008152602001600081525090565b905290565b828054828255906000526020600020908101928215612c20579160200282015b82811115612c20578251825591602001919060010190612c05565b50612c2c929150612cc1565b5090565b828054828255906000526020600020908101928215612c20579160200282015b82811115612c2057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612c50565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b5b80821115612c2c5760008155600101612cc2565b600060208284031215612ce857600080fd5b5035919050565b60008060408385031215612d0257600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612d4f57612d4f612d11565b604052919050565b600060208284031215612d6957600080fd5b81356001600160401b03811115612d7f57600080fd5b8201601f81018413612d9057600080fd5b80356001600160401b03811115612da957612da9612d11565b612dbc601f8201601f1916602001612d27565b818152856020838501011115612dd157600080fd5b81602084016020830137600091810160200191909152949350505050565b600060408284031215612e0157600080fd5b604080519081016001600160401b0381118282101715612e2357612e23612d11565b604052823581526020928301359281019290925250919050565b600060408284031215612e4f57600080fd5b612e598383612def565b9392505050565b60006001600160401b03821115612e7957612e79612d11565b5060051b60200190565b600082601f830112612e9457600080fd5b8135612ea7612ea282612e60565b612d27565b8082825260208201915060208360051b860101925085831115612ec957600080fd5b602085015b83811015612ee6578035835260209283019201612ece565b5095945050505050565b600082601f830112612f0157600080fd5b8135612f0f612ea282612e60565b8082825260208201915060208360061b860101925085831115612f3157600080fd5b602085015b83811015612ee657612f488782612def565b8352602090920191604001612f36565b60008060008060808587031215612f6e57600080fd5b84356001600160401b03811115612f8457600080fd5b612f9087828801612e83565b94505060208501356001600160401b03811115612fac57600080fd5b612fb887828801612ef0565b93505060408501356001600160401b03811115612fd457600080fd5b612fe087828801612ef0565b92505060608501356001600160401b03811115612ffc57600080fd5b61300887828801612e83565b91505092959194509250565b80356001600160a01b038116811461302b57600080fd5b919050565b6000806000806080858703121561304657600080fd5b84359350602085013592506040850135915061306460608601613014565b905092959194509250565b6000806040838503121561308257600080fd5b82356001600160401b0381111561309857600080fd5b6130a485828601612ef0565b92505060208301356001600160401b038111156130c057600080fd5b6130cc85828601612ef0565b9150509250929050565b6000602082840312156130e857600080fd5b81356001600160401b038111156130fe57600080fd5b61310a84828501612ef0565b949350505050565b6000806080838503121561312557600080fd5b61312f8484612def565b915061313e8460408501612def565b90509250929050565b60008060008060c0858703121561315d57600080fd5b8435935061316e8660208701612def565b925061317d8660608701612def565b9396929550929360a00135925050565b6000806000606084860312156131a257600080fd5b8335925060208401356001600160401b038111156131bf57600080fd5b6131cb86828701612e83565b92505060408401356001600160401b038111156131e757600080fd5b6131f386828701612e83565b9150509250925092565b602080825282518282018190526000918401906040840190835b818110156132375783511515835260209384019390920191600101613217565b509095945050505050565b6000806000806080858703121561325857600080fd5b61326185613014565b935061326f60208601613014565b93969395505050506040820135916060013590565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176132c7576132c761329a565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826132f2576132f26132cd565b500490565b818103818111156132c7576132c761329a565b808201808211156132c7576132c761329a565b80820260008212600160ff1b841416156133395761333961329a565b81810583148215176132c7576132c761329a565b60008261335c5761335c6132cd565b600160ff1b8214600019841416156133765761337661329a565b500590565b818103600083128015838313168383128216171561339b5761339b61329a565b5092915050565b8082018281126000831280158216821582161715612aed57612aed61329a565b6000825160005b818110156133e357602081860181015185830152016133c9565b50600092019182525091905056fe3a6357012c1a3ae0a17d304c9920310382d968ebcc4b1771f41c6b304205b570a26469706673582212201520e23d278ad7f612f1eab10f446b8632738569aeee5a7b2a21f5bdac521ac564736f6c634300081a0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetVrfResult is a free data retrieval call binding the contract method 0xce124c17.
//
// Solidity: function GetVrfResult() view returns(bool[])
func (_Contract *ContractCaller) GetVrfResult(opts *bind.CallOpts) ([]bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetVrfResult")

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// GetVrfResult is a free data retrieval call binding the contract method 0xce124c17.
//
// Solidity: function GetVrfResult() view returns(bool[])
func (_Contract *ContractSession) GetVrfResult() ([]bool, error) {
	return _Contract.Contract.GetVrfResult(&_Contract.CallOpts)
}

// GetVrfResult is a free data retrieval call binding the contract method 0xce124c17.
//
// Solidity: function GetVrfResult() view returns(bool[])
func (_Contract *ContractCallerSession) GetVrfResult() ([]bool, error) {
	return _Contract.Contract.GetVrfResult(&_Contract.CallOpts)
}

// MDAI is a free data retrieval call binding the contract method 0xd295d515.
//
// Solidity: function MDA_i() view returns(int256)
func (_Contract *ContractCaller) MDAI(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "MDA_i")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MDAI is a free data retrieval call binding the contract method 0xd295d515.
//
// Solidity: function MDA_i() view returns(int256)
func (_Contract *ContractSession) MDAI() (*big.Int, error) {
	return _Contract.Contract.MDAI(&_Contract.CallOpts)
}

// MDAI is a free data retrieval call binding the contract method 0xd295d515.
//
// Solidity: function MDA_i() view returns(int256)
func (_Contract *ContractCallerSession) MDAI() (*big.Int, error) {
	return _Contract.Contract.MDAI(&_Contract.CallOpts)
}

// A is a free data retrieval call binding the contract method 0x0dbe671f.
//
// Solidity: function a() view returns(int256)
func (_Contract *ContractCaller) A(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "a")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// A is a free data retrieval call binding the contract method 0x0dbe671f.
//
// Solidity: function a() view returns(int256)
func (_Contract *ContractSession) A() (*big.Int, error) {
	return _Contract.Contract.A(&_Contract.CallOpts)
}

// A is a free data retrieval call binding the contract method 0x0dbe671f.
//
// Solidity: function a() view returns(int256)
func (_Contract *ContractCallerSession) A() (*big.Int, error) {
	return _Contract.Contract.A(&_Contract.CallOpts)
}

// B is a free data retrieval call binding the contract method 0x4df7e3d0.
//
// Solidity: function b() view returns(int256)
func (_Contract *ContractCaller) B(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "b")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// B is a free data retrieval call binding the contract method 0x4df7e3d0.
//
// Solidity: function b() view returns(int256)
func (_Contract *ContractSession) B() (*big.Int, error) {
	return _Contract.Contract.B(&_Contract.CallOpts)
}

// B is a free data retrieval call binding the contract method 0x4df7e3d0.
//
// Solidity: function b() view returns(int256)
func (_Contract *ContractCallerSession) B() (*big.Int, error) {
	return _Contract.Contract.B(&_Contract.CallOpts)
}

// Balances is a free data retrieval call binding the contract method 0xb7134dfa.
//
// Solidity: function balances(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCaller) Balances(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "balances", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Balances is a free data retrieval call binding the contract method 0xb7134dfa.
//
// Solidity: function balances(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractSession) Balances(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.Balances(&_Contract.CallOpts, arg0, arg1)
}

// Balances is a free data retrieval call binding the contract method 0xb7134dfa.
//
// Solidity: function balances(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCallerSession) Balances(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.Balances(&_Contract.CallOpts, arg0, arg1)
}

// Id2Addrs is a free data retrieval call binding the contract method 0x1fecdf53.
//
// Solidity: function id2Addrs(string ) view returns(address)
func (_Contract *ContractCaller) Id2Addrs(opts *bind.CallOpts, arg0 string) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "id2Addrs", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Id2Addrs is a free data retrieval call binding the contract method 0x1fecdf53.
//
// Solidity: function id2Addrs(string ) view returns(address)
func (_Contract *ContractSession) Id2Addrs(arg0 string) (common.Address, error) {
	return _Contract.Contract.Id2Addrs(&_Contract.CallOpts, arg0)
}

// Id2Addrs is a free data retrieval call binding the contract method 0x1fecdf53.
//
// Solidity: function id2Addrs(string ) view returns(address)
func (_Contract *ContractCallerSession) Id2Addrs(arg0 string) (common.Address, error) {
	return _Contract.Contract.Id2Addrs(&_Contract.CallOpts, arg0)
}

// QueryTTP is a free data retrieval call binding the contract method 0x7c8d237d.
//
// Solidity: function query_TTP(uint256 id) view returns(int256, int256, int256, int256, address)
func (_Contract *ContractCaller) QueryTTP(opts *bind.CallOpts, id *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "query_TTP", id)

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(*big.Int), *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	out4 := *abi.ConvertType(out[4], new(common.Address)).(*common.Address)

	return out0, out1, out2, out3, out4, err

}

// QueryTTP is a free data retrieval call binding the contract method 0x7c8d237d.
//
// Solidity: function query_TTP(uint256 id) view returns(int256, int256, int256, int256, address)
func (_Contract *ContractSession) QueryTTP(id *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, common.Address, error) {
	return _Contract.Contract.QueryTTP(&_Contract.CallOpts, id)
}

// QueryTTP is a free data retrieval call binding the contract method 0x7c8d237d.
//
// Solidity: function query_TTP(uint256 id) view returns(int256, int256, int256, int256, address)
func (_Contract *ContractCallerSession) QueryTTP(id *big.Int) (*big.Int, *big.Int, *big.Int, *big.Int, common.Address, error) {
	return _Contract.Contract.QueryTTP(&_Contract.CallOpts, id)
}

// QueryDateUserFee is a free data retrieval call binding the contract method 0x2d51382c.
//
// Solidity: function query_date_user_fee(uint256 task_id) view returns(uint256)
func (_Contract *ContractCaller) QueryDateUserFee(opts *bind.CallOpts, task_id *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "query_date_user_fee", task_id)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// QueryDateUserFee is a free data retrieval call binding the contract method 0x2d51382c.
//
// Solidity: function query_date_user_fee(uint256 task_id) view returns(uint256)
func (_Contract *ContractSession) QueryDateUserFee(task_id *big.Int) (*big.Int, error) {
	return _Contract.Contract.QueryDateUserFee(&_Contract.CallOpts, task_id)
}

// QueryDateUserFee is a free data retrieval call binding the contract method 0x2d51382c.
//
// Solidity: function query_date_user_fee(uint256 task_id) view returns(uint256)
func (_Contract *ContractCallerSession) QueryDateUserFee(task_id *big.Int) (*big.Int, error) {
	return _Contract.Contract.QueryDateUserFee(&_Contract.CallOpts, task_id)
}

// TaskFailed is a free data retrieval call binding the contract method 0xe4cf1c4c.
//
// Solidity: function task_failed(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCaller) TaskFailed(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "task_failed", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TaskFailed is a free data retrieval call binding the contract method 0xe4cf1c4c.
//
// Solidity: function task_failed(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractSession) TaskFailed(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.TaskFailed(&_Contract.CallOpts, arg0, arg1)
}

// TaskFailed is a free data retrieval call binding the contract method 0xe4cf1c4c.
//
// Solidity: function task_failed(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCallerSession) TaskFailed(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.TaskFailed(&_Contract.CallOpts, arg0, arg1)
}

// TaskSuccess is a free data retrieval call binding the contract method 0x138ca35e.
//
// Solidity: function task_success(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCaller) TaskSuccess(opts *bind.CallOpts, arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "task_success", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TaskSuccess is a free data retrieval call binding the contract method 0x138ca35e.
//
// Solidity: function task_success(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractSession) TaskSuccess(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.TaskSuccess(&_Contract.CallOpts, arg0, arg1)
}

// TaskSuccess is a free data retrieval call binding the contract method 0x138ca35e.
//
// Solidity: function task_success(uint256 , uint256 ) view returns(uint256)
func (_Contract *ContractCallerSession) TaskSuccess(arg0 *big.Int, arg1 *big.Int) (*big.Int, error) {
	return _Contract.Contract.TaskSuccess(&_Contract.CallOpts, arg0, arg1)
}

// DLEQVerifyCKeys is a paid mutator transaction binding the contract method 0xce8dfe43.
//
// Solidity: function DLEQVerifyCKeys() payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerifyCKeys(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerifyCKeys")
}

// DLEQVerifyCKeys is a paid mutator transaction binding the contract method 0xce8dfe43.
//
// Solidity: function DLEQVerifyCKeys() payable returns(bool)
func (_Contract *ContractSession) DLEQVerifyCKeys() (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerifyCKeys(&_Contract.TransactOpts)
}

// DLEQVerifyCKeys is a paid mutator transaction binding the contract method 0xce8dfe43.
//
// Solidity: function DLEQVerifyCKeys() payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerifyCKeys() (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerifyCKeys(&_Contract.TransactOpts)
}

// DLEQVerifyDis is a paid mutator transaction binding the contract method 0x062fb969.
//
// Solidity: function DLEQVerifyDis(uint256 index) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerifyDis(opts *bind.TransactOpts, index *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerifyDis", index)
}

// DLEQVerifyDis is a paid mutator transaction binding the contract method 0x062fb969.
//
// Solidity: function DLEQVerifyDis(uint256 index) payable returns(bool)
func (_Contract *ContractSession) DLEQVerifyDis(index *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerifyDis(&_Contract.TransactOpts, index)
}

// DLEQVerifyDis is a paid mutator transaction binding the contract method 0x062fb969.
//
// Solidity: function DLEQVerifyDis(uint256 index) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerifyDis(index *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerifyDis(&_Contract.TransactOpts, index)
}

// SubmitVerificationResults is a paid mutator transaction binding the contract method 0xc0da47a6.
//
// Solidity: function Submit_verification_results(uint256 task_id, uint256[] success, uint256[] failed) returns()
func (_Contract *ContractTransactor) SubmitVerificationResults(opts *bind.TransactOpts, task_id *big.Int, success []*big.Int, failed []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "Submit_verification_results", task_id, success, failed)
}

// SubmitVerificationResults is a paid mutator transaction binding the contract method 0xc0da47a6.
//
// Solidity: function Submit_verification_results(uint256 task_id, uint256[] success, uint256[] failed) returns()
func (_Contract *ContractSession) SubmitVerificationResults(task_id *big.Int, success []*big.Int, failed []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SubmitVerificationResults(&_Contract.TransactOpts, task_id, success, failed)
}

// SubmitVerificationResults is a paid mutator transaction binding the contract method 0xc0da47a6.
//
// Solidity: function Submit_verification_results(uint256 task_id, uint256[] success, uint256[] failed) returns()
func (_Contract *ContractTransactorSession) SubmitVerificationResults(task_id *big.Int, success []*big.Int, failed []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SubmitVerificationResults(&_Contract.TransactOpts, task_id, success, failed)
}

// TTPRegister is a paid mutator transaction binding the contract method 0x543e3d5c.
//
// Solidity: function TTP_register(int256 CV_i, int256 EV_i, int256 RP_i, address account) returns(uint256, int256)
func (_Contract *ContractTransactor) TTPRegister(opts *bind.TransactOpts, CV_i *big.Int, EV_i *big.Int, RP_i *big.Int, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "TTP_register", CV_i, EV_i, RP_i, account)
}

// TTPRegister is a paid mutator transaction binding the contract method 0x543e3d5c.
//
// Solidity: function TTP_register(int256 CV_i, int256 EV_i, int256 RP_i, address account) returns(uint256, int256)
func (_Contract *ContractSession) TTPRegister(CV_i *big.Int, EV_i *big.Int, RP_i *big.Int, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.TTPRegister(&_Contract.TransactOpts, CV_i, EV_i, RP_i, account)
}

// TTPRegister is a paid mutator transaction binding the contract method 0x543e3d5c.
//
// Solidity: function TTP_register(int256 CV_i, int256 EV_i, int256 RP_i, address account) returns(uint256, int256)
func (_Contract *ContractTransactorSession) TTPRegister(CV_i *big.Int, EV_i *big.Int, RP_i *big.Int, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.TTPRegister(&_Contract.TransactOpts, CV_i, EV_i, RP_i, account)
}

// UploadCKeys is a paid mutator transaction binding the contract method 0x85ae39ae.
//
// Solidity: function UploadCKeys((uint256,uint256)[] ckeys) returns()
func (_Contract *ContractTransactor) UploadCKeys(opts *bind.TransactOpts, ckeys []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadCKeys", ckeys)
}

// UploadCKeys is a paid mutator transaction binding the contract method 0x85ae39ae.
//
// Solidity: function UploadCKeys((uint256,uint256)[] ckeys) returns()
func (_Contract *ContractSession) UploadCKeys(ckeys []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadCKeys(&_Contract.TransactOpts, ckeys)
}

// UploadCKeys is a paid mutator transaction binding the contract method 0x85ae39ae.
//
// Solidity: function UploadCKeys((uint256,uint256)[] ckeys) returns()
func (_Contract *ContractTransactorSession) UploadCKeys(ckeys []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadCKeys(&_Contract.TransactOpts, ckeys)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x736cd6c0.
//
// Solidity: function UploadCiphertext((uint256,uint256) c0, (uint256,uint256) c1) returns()
func (_Contract *ContractTransactor) UploadCiphertext(opts *bind.TransactOpts, c0 VerificationG1Point, c1 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadCiphertext", c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x736cd6c0.
//
// Solidity: function UploadCiphertext((uint256,uint256) c0, (uint256,uint256) c1) returns()
func (_Contract *ContractSession) UploadCiphertext(c0 VerificationG1Point, c1 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x736cd6c0.
//
// Solidity: function UploadCiphertext((uint256,uint256) c0, (uint256,uint256) c1) returns()
func (_Contract *ContractTransactorSession) UploadCiphertext(c0 VerificationG1Point, c1 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadDLEQProofCKeys is a paid mutator transaction binding the contract method 0x3e7de485.
//
// Solidity: function UploadDLEQProofCKeys(uint256[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] z) returns()
func (_Contract *ContractTransactor) UploadDLEQProofCKeys(opts *bind.TransactOpts, c []*big.Int, a1 []VerificationG1Point, a2 []VerificationG1Point, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDLEQProofCKeys", c, a1, a2, z)
}

// UploadDLEQProofCKeys is a paid mutator transaction binding the contract method 0x3e7de485.
//
// Solidity: function UploadDLEQProofCKeys(uint256[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] z) returns()
func (_Contract *ContractSession) UploadDLEQProofCKeys(c []*big.Int, a1 []VerificationG1Point, a2 []VerificationG1Point, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDLEQProofCKeys(&_Contract.TransactOpts, c, a1, a2, z)
}

// UploadDLEQProofCKeys is a paid mutator transaction binding the contract method 0x3e7de485.
//
// Solidity: function UploadDLEQProofCKeys(uint256[] c, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] z) returns()
func (_Contract *ContractTransactorSession) UploadDLEQProofCKeys(c []*big.Int, a1 []VerificationG1Point, a2 []VerificationG1Point, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDLEQProofCKeys(&_Contract.TransactOpts, c, a1, a2, z)
}

// UploadDLEQProofKeys is a paid mutator transaction binding the contract method 0x9de59293.
//
// Solidity: function UploadDLEQProofKeys(uint256[] _c, (uint256,uint256)[] _a1, (uint256,uint256)[] _a2, uint256[] _z) returns()
func (_Contract *ContractTransactor) UploadDLEQProofKeys(opts *bind.TransactOpts, _c []*big.Int, _a1 []VerificationG1Point, _a2 []VerificationG1Point, _z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDLEQProofKeys", _c, _a1, _a2, _z)
}

// UploadDLEQProofKeys is a paid mutator transaction binding the contract method 0x9de59293.
//
// Solidity: function UploadDLEQProofKeys(uint256[] _c, (uint256,uint256)[] _a1, (uint256,uint256)[] _a2, uint256[] _z) returns()
func (_Contract *ContractSession) UploadDLEQProofKeys(_c []*big.Int, _a1 []VerificationG1Point, _a2 []VerificationG1Point, _z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDLEQProofKeys(&_Contract.TransactOpts, _c, _a1, _a2, _z)
}

// UploadDLEQProofKeys is a paid mutator transaction binding the contract method 0x9de59293.
//
// Solidity: function UploadDLEQProofKeys(uint256[] _c, (uint256,uint256)[] _a1, (uint256,uint256)[] _a2, uint256[] _z) returns()
func (_Contract *ContractTransactorSession) UploadDLEQProofKeys(_c []*big.Int, _a1 []VerificationG1Point, _a2 []VerificationG1Point, _z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDLEQProofKeys(&_Contract.TransactOpts, _c, _a1, _a2, _z)
}

// UploadDispute is a paid mutator transaction binding the contract method 0xd6c7bff0.
//
// Solidity: function UploadDispute((uint256,uint256) Dis) returns()
func (_Contract *ContractTransactor) UploadDispute(opts *bind.TransactOpts, Dis VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDispute", Dis)
}

// UploadDispute is a paid mutator transaction binding the contract method 0xd6c7bff0.
//
// Solidity: function UploadDispute((uint256,uint256) Dis) returns()
func (_Contract *ContractSession) UploadDispute(Dis VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDispute(&_Contract.TransactOpts, Dis)
}

// UploadDispute is a paid mutator transaction binding the contract method 0xd6c7bff0.
//
// Solidity: function UploadDispute((uint256,uint256) Dis) returns()
func (_Contract *ContractTransactorSession) UploadDispute(Dis VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDispute(&_Contract.TransactOpts, Dis)
}

// UploadDisputeProof is a paid mutator transaction binding the contract method 0x9dfb3053.
//
// Solidity: function UploadDisputeProof(uint256 c, (uint256,uint256) a1, (uint256,uint256) a2, uint256 z) returns()
func (_Contract *ContractTransactor) UploadDisputeProof(opts *bind.TransactOpts, c *big.Int, a1 VerificationG1Point, a2 VerificationG1Point, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDisputeProof", c, a1, a2, z)
}

// UploadDisputeProof is a paid mutator transaction binding the contract method 0x9dfb3053.
//
// Solidity: function UploadDisputeProof(uint256 c, (uint256,uint256) a1, (uint256,uint256) a2, uint256 z) returns()
func (_Contract *ContractSession) UploadDisputeProof(c *big.Int, a1 VerificationG1Point, a2 VerificationG1Point, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDisputeProof(&_Contract.TransactOpts, c, a1, a2, z)
}

// UploadDisputeProof is a paid mutator transaction binding the contract method 0x9dfb3053.
//
// Solidity: function UploadDisputeProof(uint256 c, (uint256,uint256) a1, (uint256,uint256) a2, uint256 z) returns()
func (_Contract *ContractTransactorSession) UploadDisputeProof(c *big.Int, a1 VerificationG1Point, a2 VerificationG1Point, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadDisputeProof(&_Contract.TransactOpts, c, a1, a2, z)
}

// UploadEKeys is a paid mutator transaction binding the contract method 0x54e119f9.
//
// Solidity: function UploadEKeys((uint256,uint256)[] EKeys0, (uint256,uint256)[] EKeys1) returns()
func (_Contract *ContractTransactor) UploadEKeys(opts *bind.TransactOpts, EKeys0 []VerificationG1Point, EKeys1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadEKeys", EKeys0, EKeys1)
}

// UploadEKeys is a paid mutator transaction binding the contract method 0x54e119f9.
//
// Solidity: function UploadEKeys((uint256,uint256)[] EKeys0, (uint256,uint256)[] EKeys1) returns()
func (_Contract *ContractSession) UploadEKeys(EKeys0 []VerificationG1Point, EKeys1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadEKeys(&_Contract.TransactOpts, EKeys0, EKeys1)
}

// UploadEKeys is a paid mutator transaction binding the contract method 0x54e119f9.
//
// Solidity: function UploadEKeys((uint256,uint256)[] EKeys0, (uint256,uint256)[] EKeys1) returns()
func (_Contract *ContractTransactorSession) UploadEKeys(EKeys0 []VerificationG1Point, EKeys1 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadEKeys(&_Contract.TransactOpts, EKeys0, EKeys1)
}

// UploadGenerator is a paid mutator transaction binding the contract method 0xb09e6f70.
//
// Solidity: function UploadGenerator((uint256,uint256) generator) returns()
func (_Contract *ContractTransactor) UploadGenerator(opts *bind.TransactOpts, generator VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadGenerator", generator)
}

// UploadGenerator is a paid mutator transaction binding the contract method 0xb09e6f70.
//
// Solidity: function UploadGenerator((uint256,uint256) generator) returns()
func (_Contract *ContractSession) UploadGenerator(generator VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadGenerator(&_Contract.TransactOpts, generator)
}

// UploadGenerator is a paid mutator transaction binding the contract method 0xb09e6f70.
//
// Solidity: function UploadGenerator((uint256,uint256) generator) returns()
func (_Contract *ContractTransactorSession) UploadGenerator(generator VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadGenerator(&_Contract.TransactOpts, generator)
}

// UploadGs is a paid mutator transaction binding the contract method 0x6a774235.
//
// Solidity: function UploadGs((uint256,uint256)[] gs) returns()
func (_Contract *ContractTransactor) UploadGs(opts *bind.TransactOpts, gs []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadGs", gs)
}

// UploadGs is a paid mutator transaction binding the contract method 0x6a774235.
//
// Solidity: function UploadGs((uint256,uint256)[] gs) returns()
func (_Contract *ContractSession) UploadGs(gs []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadGs(&_Contract.TransactOpts, gs)
}

// UploadGs is a paid mutator transaction binding the contract method 0x6a774235.
//
// Solidity: function UploadGs((uint256,uint256)[] gs) returns()
func (_Contract *ContractTransactorSession) UploadGs(gs []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadGs(&_Contract.TransactOpts, gs)
}

// UploadOwnerPk is a paid mutator transaction binding the contract method 0x315f6944.
//
// Solidity: function UploadOwnerPk((uint256,uint256) pk) returns()
func (_Contract *ContractTransactor) UploadOwnerPk(opts *bind.TransactOpts, pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadOwnerPk", pk)
}

// UploadOwnerPk is a paid mutator transaction binding the contract method 0x315f6944.
//
// Solidity: function UploadOwnerPk((uint256,uint256) pk) returns()
func (_Contract *ContractSession) UploadOwnerPk(pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerPk(&_Contract.TransactOpts, pk)
}

// UploadOwnerPk is a paid mutator transaction binding the contract method 0x315f6944.
//
// Solidity: function UploadOwnerPk((uint256,uint256) pk) returns()
func (_Contract *ContractTransactorSession) UploadOwnerPk(pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerPk(&_Contract.TransactOpts, pk)
}

// UploadTTPsPk is a paid mutator transaction binding the contract method 0x64691d2b.
//
// Solidity: function UploadTTPsPk((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactor) UploadTTPsPk(opts *bind.TransactOpts, pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadTTPsPk", pkArray)
}

// UploadTTPsPk is a paid mutator transaction binding the contract method 0x64691d2b.
//
// Solidity: function UploadTTPsPk((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractSession) UploadTTPsPk(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadTTPsPk(&_Contract.TransactOpts, pkArray)
}

// UploadTTPsPk is a paid mutator transaction binding the contract method 0x64691d2b.
//
// Solidity: function UploadTTPsPk((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactorSession) UploadTTPsPk(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadTTPsPk(&_Contract.TransactOpts, pkArray)
}

// UploadUserPk is a paid mutator transaction binding the contract method 0x3159aea5.
//
// Solidity: function UploadUserPk((uint256,uint256) pk) returns()
func (_Contract *ContractTransactor) UploadUserPk(opts *bind.TransactOpts, pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadUserPk", pk)
}

// UploadUserPk is a paid mutator transaction binding the contract method 0x3159aea5.
//
// Solidity: function UploadUserPk((uint256,uint256) pk) returns()
func (_Contract *ContractSession) UploadUserPk(pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserPk(&_Contract.TransactOpts, pk)
}

// UploadUserPk is a paid mutator transaction binding the contract method 0x3159aea5.
//
// Solidity: function UploadUserPk((uint256,uint256) pk) returns()
func (_Contract *ContractTransactorSession) UploadUserPk(pk VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserPk(&_Contract.TransactOpts, pk)
}

// VSSVerify is a paid mutator transaction binding the contract method 0xe50b416b.
//
// Solidity: function VSSVerify((uint256,uint256)[] commitments) payable returns(bool)
func (_Contract *ContractTransactor) VSSVerify(opts *bind.TransactOpts, commitments []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VSSVerify", commitments)
}

// VSSVerify is a paid mutator transaction binding the contract method 0xe50b416b.
//
// Solidity: function VSSVerify((uint256,uint256)[] commitments) payable returns(bool)
func (_Contract *ContractSession) VSSVerify(commitments []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.VSSVerify(&_Contract.TransactOpts, commitments)
}

// VSSVerify is a paid mutator transaction binding the contract method 0xe50b416b.
//
// Solidity: function VSSVerify((uint256,uint256)[] commitments) payable returns(bool)
func (_Contract *ContractTransactorSession) VSSVerify(commitments []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.VSSVerify(&_Contract.TransactOpts, commitments)
}

// DateUserFee is a paid mutator transaction binding the contract method 0x7210ddc2.
//
// Solidity: function date_user_fee(uint256 task_id) returns(uint256)
func (_Contract *ContractTransactor) DateUserFee(opts *bind.TransactOpts, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "date_user_fee", task_id)
}

// DateUserFee is a paid mutator transaction binding the contract method 0x7210ddc2.
//
// Solidity: function date_user_fee(uint256 task_id) returns(uint256)
func (_Contract *ContractSession) DateUserFee(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DateUserFee(&_Contract.TransactOpts, task_id)
}

// DateUserFee is a paid mutator transaction binding the contract method 0x7210ddc2.
//
// Solidity: function date_user_fee(uint256 task_id) returns(uint256)
func (_Contract *ContractTransactorSession) DateUserFee(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DateUserFee(&_Contract.TransactOpts, task_id)
}

// DateUserPay is a paid mutator transaction binding the contract method 0x27e35d8f.
//
// Solidity: function date_user_pay(uint256 task_id) payable returns()
func (_Contract *ContractTransactor) DateUserPay(opts *bind.TransactOpts, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "date_user_pay", task_id)
}

// DateUserPay is a paid mutator transaction binding the contract method 0x27e35d8f.
//
// Solidity: function date_user_pay(uint256 task_id) payable returns()
func (_Contract *ContractSession) DateUserPay(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DateUserPay(&_Contract.TransactOpts, task_id)
}

// DateUserPay is a paid mutator transaction binding the contract method 0x27e35d8f.
//
// Solidity: function date_user_pay(uint256 task_id) payable returns()
func (_Contract *ContractTransactorSession) DateUserPay(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DateUserPay(&_Contract.TransactOpts, task_id)
}

// Deposit is a paid mutator transaction binding the contract method 0xe2bbb158.
//
// Solidity: function deposit(uint256 TTP_id, uint256 task_id) payable returns()
func (_Contract *ContractTransactor) Deposit(opts *bind.TransactOpts, TTP_id *big.Int, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "deposit", TTP_id, task_id)
}

// Deposit is a paid mutator transaction binding the contract method 0xe2bbb158.
//
// Solidity: function deposit(uint256 TTP_id, uint256 task_id) payable returns()
func (_Contract *ContractSession) Deposit(TTP_id *big.Int, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Deposit(&_Contract.TransactOpts, TTP_id, task_id)
}

// Deposit is a paid mutator transaction binding the contract method 0xe2bbb158.
//
// Solidity: function deposit(uint256 TTP_id, uint256 task_id) payable returns()
func (_Contract *ContractTransactorSession) Deposit(TTP_id *big.Int, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Deposit(&_Contract.TransactOpts, TTP_id, task_id)
}

// FailDistribute is a paid mutator transaction binding the contract method 0x03f54f53.
//
// Solidity: function fail_distribute(uint256 task_id) returns()
func (_Contract *ContractTransactor) FailDistribute(opts *bind.TransactOpts, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "fail_distribute", task_id)
}

// FailDistribute is a paid mutator transaction binding the contract method 0x03f54f53.
//
// Solidity: function fail_distribute(uint256 task_id) returns()
func (_Contract *ContractSession) FailDistribute(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.FailDistribute(&_Contract.TransactOpts, task_id)
}

// FailDistribute is a paid mutator transaction binding the contract method 0x03f54f53.
//
// Solidity: function fail_distribute(uint256 task_id) returns()
func (_Contract *ContractTransactorSession) FailDistribute(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.FailDistribute(&_Contract.TransactOpts, task_id)
}

// NewTask is a paid mutator transaction binding the contract method 0xf716305e.
//
// Solidity: function new_task(address date_owner, address date_user, uint256 date_fee, uint256 n) returns(uint256)
func (_Contract *ContractTransactor) NewTask(opts *bind.TransactOpts, date_owner common.Address, date_user common.Address, date_fee *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "new_task", date_owner, date_user, date_fee, n)
}

// NewTask is a paid mutator transaction binding the contract method 0xf716305e.
//
// Solidity: function new_task(address date_owner, address date_user, uint256 date_fee, uint256 n) returns(uint256)
func (_Contract *ContractSession) NewTask(date_owner common.Address, date_user common.Address, date_fee *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.NewTask(&_Contract.TransactOpts, date_owner, date_user, date_fee, n)
}

// NewTask is a paid mutator transaction binding the contract method 0xf716305e.
//
// Solidity: function new_task(address date_owner, address date_user, uint256 date_fee, uint256 n) returns(uint256)
func (_Contract *ContractTransactorSession) NewTask(date_owner common.Address, date_user common.Address, date_fee *big.Int, n *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.NewTask(&_Contract.TransactOpts, date_owner, date_user, date_fee, n)
}

// Register is a paid mutator transaction binding the contract method 0xf2c298be.
//
// Solidity: function register(string id) payable returns(bool)
func (_Contract *ContractTransactor) Register(opts *bind.TransactOpts, id string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "register", id)
}

// Register is a paid mutator transaction binding the contract method 0xf2c298be.
//
// Solidity: function register(string id) payable returns(bool)
func (_Contract *ContractSession) Register(id string) (*types.Transaction, error) {
	return _Contract.Contract.Register(&_Contract.TransactOpts, id)
}

// Register is a paid mutator transaction binding the contract method 0xf2c298be.
//
// Solidity: function register(string id) payable returns(bool)
func (_Contract *ContractTransactorSession) Register(id string) (*types.Transaction, error) {
	return _Contract.Contract.Register(&_Contract.TransactOpts, id)
}

// SuccessDistribute is a paid mutator transaction binding the contract method 0x790ef683.
//
// Solidity: function success_distribute(uint256 task_id) returns()
func (_Contract *ContractTransactor) SuccessDistribute(opts *bind.TransactOpts, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "success_distribute", task_id)
}

// SuccessDistribute is a paid mutator transaction binding the contract method 0x790ef683.
//
// Solidity: function success_distribute(uint256 task_id) returns()
func (_Contract *ContractSession) SuccessDistribute(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SuccessDistribute(&_Contract.TransactOpts, task_id)
}

// SuccessDistribute is a paid mutator transaction binding the contract method 0x790ef683.
//
// Solidity: function success_distribute(uint256 task_id) returns()
func (_Contract *ContractTransactorSession) SuccessDistribute(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.SuccessDistribute(&_Contract.TransactOpts, task_id)
}

// UpdateCYI is a paid mutator transaction binding the contract method 0xe78b152d.
//
// Solidity: function updateCY_i(uint256 task_id) returns()
func (_Contract *ContractTransactor) UpdateCYI(opts *bind.TransactOpts, task_id *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "updateCY_i", task_id)
}

// UpdateCYI is a paid mutator transaction binding the contract method 0xe78b152d.
//
// Solidity: function updateCY_i(uint256 task_id) returns()
func (_Contract *ContractSession) UpdateCYI(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UpdateCYI(&_Contract.TransactOpts, task_id)
}

// UpdateCYI is a paid mutator transaction binding the contract method 0xe78b152d.
//
// Solidity: function updateCY_i(uint256 task_id) returns()
func (_Contract *ContractTransactorSession) UpdateCYI(task_id *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UpdateCYI(&_Contract.TransactOpts, task_id)
}
