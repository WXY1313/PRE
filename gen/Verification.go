// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerificationG1Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG1Point struct {
	X *big.Int
	Y *big.Int
}

// VerificationG2Point is an auto generated low-level Go binding around an user-defined struct.
type VerificationG2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// VerificationReCipher is an auto generated low-level Go binding around an user-defined struct.
type VerificationReCipher struct {
	C2 VerificationG1Point
	C3 VerificationG1Point
}

// VerificationReKey is an auto generated low-level Go binding around an user-defined struct.
type VerificationReKey struct {
	RK0 VerificationG1Point
	RK1 VerificationG1Point
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"y2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"a2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"name\":\"DLEQVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetFieldModulus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetIndex\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetOnlyReKeysResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetReCipher\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C3\",\"type\":\"tuple\"}],\"internalType\":\"structVerification.ReCipher[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetReKeys\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"RK0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"RK1\",\"type\":\"tuple\"}],\"internalType\":\"structVerification.ReKey[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetReKeysResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVKoResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetVKuResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"rsk0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"rsk1\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"commitment\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"witness\",\"type\":\"tuple\"}],\"name\":\"KZGVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"c3\",\"type\":\"tuple\"}],\"name\":\"OnlyUploadReCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks0\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks1\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"I\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"commitment\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"witness\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"OnlyUploadReKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"C3\",\"type\":\"tuple\"}],\"internalType\":\"structVerification.ReCipher\",\"name\":\"recipher\",\"type\":\"tuple\"}],\"name\":\"ReCipherVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"c0\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"c1\",\"type\":\"string\"}],\"name\":\"UploadCiphertext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"pkArray\",\"type\":\"tuple[]\"}],\"name\":\"UploadDRsKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"vk\",\"type\":\"tuple\"}],\"name\":\"UploadOwnerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"c3\",\"type\":\"tuple[]\"}],\"name\":\"UploadReCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks0\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"rks1\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"I\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"commitment\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"witness\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"a2\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"c\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"z\",\"type\":\"uint256[]\"}],\"name\":\"UploadReKeys\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point[]\",\"name\":\"tau1\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point[]\",\"name\":\"tau2\",\"type\":\"tuple[]\"}],\"name\":\"UploadSystemKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structVerification.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structVerification.G2Point\",\"name\":\"vk\",\"type\":\"tuple\"}],\"name\":\"UploadUserKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VKoVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VKuVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x6080604052348015600e575f5ffd5b50614ba98061001c5f395ff3fe608060405260043610610134575f3560e01c80635f601a05116100aa5780639da5cd001161006e5780639da5cd00146103cc5780639e134b59146103f4578063c0f437d414610424578063ecd225dd1461044e578063f029c25e14610476578063fea3c7501461049e57610134565b80635f601a05146102fc5780636a3c9cf41461032657806377c50301146103505780638959c8e51461037a5780639a34712e1461039057610134565b80631357d59b116100fc5780631357d59b146101f057806320a8dba61461021a5780633ae1549014610246578063450d46eb1461026e57806355a3e90f146102aa578063593f5f2f146102d457610134565b80630359a5dd1461013857806304d067901461016057806307267e5e1461018857806308ac6601146101b05780630dfe083f146101c6575b5f5ffd5b348015610143575f5ffd5b5061015e60048036038101906101599190613aba565b6104c6565b005b34801561016b575f5ffd5b5061018660048036038101906101819190613c78565b61051b565b005b348015610193575f5ffd5b506101ae60048036038101906101a99190613ecd565b61060e565b005b3480156101bb575f5ffd5b506101c461065b565b005b3480156101d1575f5ffd5b506101da61085b565b6040516101e79190613f41565b60405180910390f35b3480156101fb575f5ffd5b50610204610871565b6040516102119190613f41565b60405180910390f35b348015610225575f5ffd5b5061022e610886565b60405161023d9392919061418e565b60405180910390f35b348015610251575f5ffd5b5061026c600480360381019061026791906141d1565b610a6b565b005b348015610279575f5ffd5b50610294600480360381019061028f9190614265565b610ae1565b6040516102a19190613f41565b60405180910390f35b3480156102b5575f5ffd5b506102be610cfe565b6040516102cb919061429f565b60405180910390f35b3480156102df575f5ffd5b506102fa60048036038101906102f591906141d1565b610d25565b005b348015610307575f5ffd5b50610310610e5b565b60405161031d9190613f41565b60405180910390f35b348015610331575f5ffd5b5061033a610e70565b6040516103479190613f41565b60405180910390f35b34801561035b575f5ffd5b50610364610e86565b6040516103719190614349565b60405180910390f35b348015610385575f5ffd5b5061038e610edc565b005b34801561039b575f5ffd5b506103b660048036038101906103b19190614369565b6110de565b6040516103c39190613f41565b60405180910390f35b3480156103d7575f5ffd5b506103f260048036038101906103ed91906144a1565b61163a565b005b61040e60048036038101906104099190614517565b611726565b60405161041b9190613f41565b60405180910390f35b34801561042f575f5ffd5b506104386117e0565b60405161044591906146a1565b60405180910390f35b348015610459575f5ffd5b50610474600480360381019061046f91906146c1565b611889565b005b348015610481575f5ffd5b5061049c60048036038101906104979190613aba565b611966565b005b3480156104a9575f5ffd5b506104c460048036038101906104bf9190613c78565b6119bb565b005b8160015f015f820151815f0155602082015181600101559050508060016002015f820151815f019060026104fb9291906136e5565b506020820151816002019060026105139291906136e5565b509050505050565b610523613725565b5f5f90505b8a51811015610601578a8181518110610544576105436146ec565b5b6020026020010151825f0181905250898181518110610566576105656146ec565b5b60200260200101518260200181905250601582908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f820151815f01556020820151816001015550506020820151816002015f820151815f015560208201518160010155505050506001601860016101000a81548160ff0219169083151502179055508080600101915050610528565b5050505050505050505050565b81600f5f015f820151815f019060026106289291906136e5565b506020820151816002019060026106409291906136e5565b5090505080600f60040190816106569190614916565b505050565b61081b5f5f81548110610671576106706146ec565b5b905f5260205f2090600602015f016040518060400160405290815f820154815260200160018201548152505060016002016040518060400160405290815f82016002806020026040519081016040528092919082600280156106e8576020028201915b8154815260200190600101908083116106d4575b505050505081526020016002820160028060200260405190810160405280929190826002801561072d576020028201915b815481526020019060010190808311610719575b50505050508152505061076060015f016040518060400160405290815f8201548152602001600182015481525050611cba565b5f5f81548110610773576107726146ec565b5b905f5260205f2090600602016002016040518060400160405290815f82016002806020026040519081016040528092919082600280156107c8576020028201915b8154815260200190600101908083116107b4575b505050505081526020016002820160028060200260405190810160405280929190826002801561080d576020028201915b8154815260200190600101908083116107f9575b505050505081525050611d58565b1561083f576001600d5f6101000a81548160ff021916908315150217905550610859565b5f600d5f6101000a81548160ff0219169083151502179055505b565b5f601860019054906101000a900460ff16905090565b5f600d5f9054906101000a900460ff16905090565b61088e61374b565b606080600f5f01600f6004016019826040518060400160405290815f82016002806020026040519081016040528092919082600280156108e3576020028201915b8154815260200190600101908083116108cf575b5050505050815260200160028201600280602002604051908101604052809291908260028015610928576020028201915b815481526020019060010190808311610914575b505050505081525050925081805461093f90614746565b80601f016020809104026020016040519081016040528092919081815260200182805461096b90614746565b80156109b65780601f1061098d576101008083540402835291602001916109b6565b820191905f5260205f20905b81548152906001019060200180831161099957829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020015f905b82821015610a5a578382905f5260205f2090600402016040518060400160405290815f82016040518060400160405290815f82015481526020016001820154815250508152602001600282016040518060400160405290815f820154815260200160018201548152505081525050815260200190600101906109dd565b505050509050925092509250909192565b5f5f90505b8151811015610add57600e828281518110610a8e57610a8d6146ec565b5b6020026020010151908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001015550508080600101915050610a70565b5050565b5f610ce7610af28360200151611cba565b5f5f81548110610b0557610b046146ec565b5b905f5260205f2090600602016002016040518060400160405290815f8201600280602002604051908101604052809291908260028015610b5a576020028201915b815481526020019060010190808311610b46575b5050505050815260200160028201600280602002604051908101604052809291908260028015610b9f576020028201915b815481526020019060010190808311610b8b575b505050505081525050845f015160016002016040518060400160405290815f8201600280602002604051908101604052809291908260028015610bf7576020028201915b815481526020019060010190808311610be3575b5050505050815260200160028201600280602002604051908101604052809291908260028015610c3c576020028201915b815481526020019060010190808311610c28575b505050505081525050865f015160076002016040518060400160405290815f8201600280602002604051908101604052809291908260028015610c94576020028201915b815481526020019060010190808311610c80575b5050505050815260200160028201600280602002604051908101604052809291908260028015610cd9576020028201915b815481526020019060010190808311610cc5575b505050505081525050611e9d565b15610cf55760019050610cf9565b5f90505b919050565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905090565b610d2d613771565b5f5f90505b8251811015610e565760148181548110610d4f57610d4e6146ec565b5b905f5260205f2090600402015f016040518060400160405290815f8201548152602001600182015481525050825f0181905250828181518110610d9557610d946146ec565b5b60200260200101518260200181905250610dae82610ae1565b15610e4957601982908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f820151815f01556020820151816001015550506020820151816002015f820151815f015560208201518160010155505050506016600182610e259190614a12565b908060018154018082558091505060019003905f5260205f20015f90919091909150555b8080600101915050610d32565b505050565b5f60185f9054906101000a900460ff16905090565b5f600d60019054906101000a900460ff16905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610ed257602002820191905f5260205f20905b815481526020019060010190808311610ebe575b5050505050905090565b61109c5f5f81548110610ef257610ef16146ec565b5b905f5260205f2090600602015f016040518060400160405290815f820154815260200160018201548152505060076002016040518060400160405290815f8201600280602002604051908101604052809291908260028015610f69576020028201915b815481526020019060010190808311610f55575b5050505050815260200160028201600280602002604051908101604052809291908260028015610fae576020028201915b815481526020019060010190808311610f9a575b505050505081525050610fe160075f016040518060400160405290815f8201548152602001600182015481525050611cba565b5f5f81548110610ff457610ff36146ec565b5b905f5260205f2090600602016002016040518060400160405290815f8201600280602002604051908101604052809291908260028015611049576020028201915b815481526020019060010190808311611035575b505050505081526020016002820160028060200260405190810160405280929190826002801561108e576020028201915b81548152602001906001019080831161107a575b505050505081525050611d58565b156110c1576001600d60016101000a81548160ff0219169083151502179055506110dc565b5f600d60016101000a81548160ff0219169083151502179055505b565b5f6110e7613797565b6110ef61374b565b6110f761374b565b611109866111048b611cba565b612024565b92506111f8875f5f81548110611122576111216146ec565b5b905f5260205f2090600602016002015f01600160028110611146576111456146ec565b5b01545f5f8154811061115b5761115a6146ec565b5b905f5260205f2090600602016002015f015f6002811061117e5761117d6146ec565b5b01545f5f81548110611193576111926146ec565b5b905f5260205f2090600602016002016002016001600281106111b8576111b76146ec565b5b01545f5f815481106111cd576111cc6146ec565b5b905f5260205f2090600602016002016002015f600281106111f1576111f06146ec565b5b01546120db565b855f015160016002811061120f5761120e6146ec565b5b60200201865f01515f60028110611229576112286146ec565b5b602002018760200151600160028110611245576112446146ec565b5b6020020188602001515f600281106112605761125f6146ec565b5b6020020184815250848152508481525084815250505050506112f0825f0151600160028110611292576112916146ec565b5b6020020151835f01515f600281106112ad576112ac6146ec565b5b602002015184602001516001600281106112ca576112c96146ec565b5b602002015185602001515f600281106112e6576112e56146ec565b5b60200201516121fc565b855f0151600160028110611307576113066146ec565b5b60200201865f01515f60028110611321576113206146ec565b5b60200201876020015160016002811061133d5761133c6146ec565b5b6020020188602001515f60028110611358576113576146ec565b5b6020020184815250848152508481525084815250505050506114d05f600181548110611387576113866146ec565b5b905f5260205f2090600602016002015f016001600281106113ab576113aa6146ec565b5b01545f6001815481106113c1576113c06146ec565b5b905f5260205f2090600602016002015f015f600281106113e4576113e36146ec565b5b01545f6001815481106113fa576113f96146ec565b5b905f5260205f20906006020160020160020160016002811061141f5761141e6146ec565b5b01545f600181548110611435576114346146ec565b5b905f5260205f2090600602016002016002015f60028110611459576114586146ec565b5b0154865f0151600160028110611472576114716146ec565b5b6020020151875f01515f6002811061148d5761148c6146ec565b5b602002015188602001516001600281106114aa576114a96146ec565b5b602002015189602001515f600281106114c6576114c56146ec565b5b60200201516122a4565b845f01516001600281106114e7576114e66146ec565b5b60200201855f01515f60028110611501576115006146ec565b5b60200201866020015160016002811061151d5761151c6146ec565b5b6020020187602001515f60028110611538576115376146ec565b5b602002018481525084815250848152508481525050505050611619835f5f81548110611567576115666146ec565b5b905f5260205f2090600602016002016040518060400160405290815f82016002806020026040519081016040528092919082600280156115bc576020028201915b8154815260200190600101908083116115a8575b5050505050815260200160028201600280602002604051908101604052809291908260028015611601576020028201915b8154815260200190600101908083116115ed575b50505050508152505061161388611cba565b84611d58565b1561162a5760019350505050611631565b5f93505050505b95945050505050565b6116426137af565b5f5f90505b835181101561172057838181518110611663576116626146ec565b5b6020026020010151825f0181905250828181518110611685576116846146ec565b5b602002602001015182602001819052505f82908060018154018082558091505060019003905f5260205f2090600602015f909190919091505f820151815f015f820151815f01556020820151816001015550506020820151816002015f820151815f019060026116f69291906136e5565b5060208201518160020190600261170e9291906136e5565b50505050508080600101915050611647565b50505050565b5f5f6117328a84612478565b90505f61173f8a86612478565b90505f61174c8986612478565b90505f6117598988612478565b90505f6117668585612024565b90505f6117738484612024565b9050815f01518d5f0151141580611792575081602001518d6020015114155b806117a35750805f01518a5f015114155b806117b6575080602001518a6020015114155b156117c9575f96505050505050506117d4565b600196505050505050505b98975050505050505050565b60606014805480602002602001604051908101604052809291908181526020015f905b82821015611880578382905f5260205f2090600402016040518060400160405290815f82016040518060400160405290815f82015481526020016001820154815250508152602001600282016040518060400160405290815f82015481526020016001820154815250508152505081526020019060010190611803565b50505050905090565b611891613771565b60145f815481106118a5576118a46146ec565b5b905f5260205f2090600402015f016040518060400160405290815f8201548152602001600182015481525050815f0181905250601a81908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f820151815f01556020820151816001015550506020820151816002015f820151815f0155602082015181600101555050505060176001908060018154018082558091505060019003905f5260205f20015f90919091909150555050565b8160075f015f820151815f0155602082015181600101559050508060076002015f820151815f0190600261199b9291906136e5565b506020820151816002019060026119b39291906136e5565b509050505050565b6119c3613725565b5f5f90505b8a51811015611c9257611a468b82815181106119e7576119e66146ec565b5b60200260200101518b8381518110611a0257611a016146ec565b5b60200260200101518b8481518110611a1d57611a1c6146ec565b5b60200260200101518b8b8681518110611a3957611a386146ec565b5b60200260200101516110de565b611a51575050611caf565b5f611ae460015f016040518060400160405290815f8201548152602001600182015481525050611adf600e8581548110611a8e57611a8d6146ec565b5b905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505060075f016040518060400160405290815f8201548152602001600182015481525050612024565b612024565b9050611bd05f5f81548110611afc57611afb6146ec565b5b905f5260205f2090600602015f016040518060400160405290815f82015481526020016001820154815250508d8481518110611b3b57611b3a6146ec565b5b6020026020010151898581518110611b5657611b556146ec565b5b6020026020010151848f8781518110611b7257611b716146ec565b5b60200260200101518b8881518110611b8d57611b8c6146ec565b5b60200260200101518b8981518110611ba857611ba76146ec565b5b60200260200101518b8a81518110611bc357611bc26146ec565b5b6020026020010151611726565b611bdc57505050611caf565b8b8281518110611bef57611bee6146ec565b5b6020026020010151835f01819052508a8281518110611c1157611c106146ec565b5b60200260200101518360200181905250601483908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f820151815f01556020820151816001015550506020820151816002015f820151815f015560208201518160010155505050505080806001019150506119c8565b50600160185f6101000a81548160ff021916908315150217905550505b505050505050505050565b611cc2613797565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790505f835f0151148015611cfb57505f8360200151145b15611d1d5760405180604001604052805f81526020015f815250915050611d53565b6040518060400160405280845f01518152602001828560200151611d419190614a72565b83611d4c9190614aa2565b8152509150505b919050565b5f5f600267ffffffffffffffff811115611d7557611d746138bf565b5b604051908082528060200260200182016040528015611dae57816020015b611d9b613797565b815260200190600190039081611d935790505b5090505f600267ffffffffffffffff811115611dcd57611dcc6138bf565b5b604051908082528060200260200182016040528015611e0657816020015b611df361374b565b815260200190600190039081611deb5790505b50905086825f81518110611e1d57611e1c6146ec565b5b60200260200101819052508482600181518110611e3d57611e3c6146ec565b5b602002602001018190525085815f81518110611e5c57611e5b6146ec565b5b60200260200101819052508381600181518110611e7c57611e7b6146ec565b5b6020026020010181905250611e91828261250a565b92505050949350505050565b5f5f600367ffffffffffffffff811115611eba57611eb96138bf565b5b604051908082528060200260200182016040528015611ef357816020015b611ee0613797565b815260200190600190039081611ed85790505b5090505f600367ffffffffffffffff811115611f1257611f116138bf565b5b604051908082528060200260200182016040528015611f4b57816020015b611f3861374b565b815260200190600190039081611f305790505b50905088825f81518110611f6257611f616146ec565b5b60200260200101819052508682600181518110611f8257611f816146ec565b5b60200260200101819052508482600281518110611fa257611fa16146ec565b5b602002602001018190525087815f81518110611fc157611fc06146ec565b5b60200260200101819052508581600181518110611fe157611fe06146ec565b5b60200260200101819052508381600281518110612001576120006146ec565b5b6020026020010181905250612016828261250a565b925050509695505050505050565b61202c613797565b6120346137d5565b835f0151815f6004811061204b5761204a6146ec565b5b60200201818152505083602001518160016004811061206d5761206c6146ec565b5b602002018181525050825f01518160026004811061208e5761208d6146ec565b5b6020020181815250508260200151816003600481106120b0576120af6146ec565b5b6020020181815250505f60608360c08460066107d05a03fa9050806120d3575f5ffd5b505092915050565b5f5f5f5f5f600190505f891480156120f257505f88145b80156120fd57505f87145b801561210857505f86145b1561211d5760019850600196505f9050612137565b61212989898989612841565b61213657612135614ad5565b5b5b5f6121478b8b8b8b8b875f612905565b90506121e6815f6006811061215f5761215e6146ec565b5b602002015182600160068110612178576121776146ec565b5b602002015183600260068110612191576121906146ec565b5b6020020151846003600681106121aa576121a96146ec565b5b6020020151856004600681106121c3576121c26146ec565b5b6020020151866005600681106121dc576121db6146ec565b5b6020020151612a0a565b9550955095509550505095509550955095915050565b5f5f5f5f5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790505f8914801561223257505f88145b801561223d57505f87145b801561224857505f86145b1561225f575f5f5f5f945094509450945050612299565b8888828961226d9190614a72565b836122789190614aa2565b83896122849190614a72565b8461228f9190614aa2565b9450945094509450505b945094509450949050565b5f5f5f5f5f8c1480156122b657505f8b145b80156122c157505f8a145b80156122cc57505f89145b15612324575f881480156122df57505f87145b80156122ea57505f86145b80156122f557505f85145b6123135761230588888888612841565b61231257612311614ad5565b5b5b878787879350935093509350612469565b5f8814801561233257505f87145b801561233d57505f86145b801561234857505f85145b15612377576123598c8c8c8c612841565b61236657612365614ad5565b5b8b8b8b8b9350935093509350612469565b6123838c8c8c8c612841565b6123905761238f614ad5565b5b61239c88888888612841565b6123a9576123a8614ad5565b5b5f6123c08d8d8d8d60015f8f8f8f8f60015f612a59565b905061245f815f600681106123d8576123d76146ec565b5b6020020151826001600681106123f1576123f06146ec565b5b60200201518360026006811061240a576124096146ec565b5b602002015184600360068110612423576124226146ec565b5b60200201518560046006811061243c5761243b6146ec565b5b602002015186600560068110612455576124546146ec565b5b6020020151612a0a565b9450945094509450505b98509850985098945050505050565b612480613797565b6124886137f7565b835f0151815f6003811061249f5761249e6146ec565b5b6020020181815250508360200151816001600381106124c1576124c06146ec565b5b60200201818152505082816002600381106124df576124de6146ec565b5b6020020181815250505f60608360808460076107d05a03fa905080612502575f5ffd5b505092915050565b5f8151835114612518575f5ffd5b5f835190505f60068261252b9190614b02565b90505f8167ffffffffffffffff811115612548576125476138bf565b5b6040519080825280602002602001820160405280156125765781602001602082028036833780820191505090505b5090505f5f90505b838110156127f157868181518110612599576125986146ec565b5b60200260200101515f0151825f6006846125b39190614b02565b6125bd9190614a12565b815181106125ce576125cd6146ec565b5b6020026020010181815250508681815181106125ed576125ec6146ec565b5b6020026020010151602001518260016006846126099190614b02565b6126139190614a12565b81518110612624576126236146ec565b5b602002602001018181525050858181518110612643576126426146ec565b5b60200260200101515f01515f600281106126605761265f6146ec565b5b60200201518260026006846126759190614b02565b61267f9190614a12565b815181106126905761268f6146ec565b5b6020026020010181815250508581815181106126af576126ae6146ec565b5b60200260200101515f01516001600281106126cd576126cc6146ec565b5b60200201518260036006846126e29190614b02565b6126ec9190614a12565b815181106126fd576126fc6146ec565b5b60200260200101818152505085818151811061271c5761271b6146ec565b5b6020026020010151602001515f6002811061273a576127396146ec565b5b602002015182600460068461274f9190614b02565b6127599190614a12565b8151811061276a576127696146ec565b5b602002602001018181525050858181518110612789576127886146ec565b5b6020026020010151602001516001600281106127a8576127a76146ec565b5b60200201518260056006846127bd9190614b02565b6127c79190614a12565b815181106127d8576127d76146ec565b5b602002602001018181525050808060010191505061257e565b506127fa613819565b5f602082602086026020860160086107d05a03fa905080612819575f5ffd5b5f825f6001811061282d5761282c6146ec565b5b602002015114159550505050505092915050565b5f5f5f5f5f61285287878989613165565b809450819550505061286689898b8b613165565b809250819350505061287a82828b8b613165565b809250819350505061288e84848484613295565b80945081955050506128e184847f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e57e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2613295565b80945081955050505f841480156128f757505f83145b945050505050949350505050565b61290d61383b565b5b5f88146129ff575f60018916146129c5576129c2815f60068110612935576129346146ec565b5b60200201518260016006811061294e5761294d6146ec565b5b602002015183600260068110612967576129666146ec565b5b6020020151846003600681106129805761297f6146ec565b5b602002015185600460068110612999576129986146ec565b5b6020020151866005600681106129b2576129b16146ec565b5b60200201518d8d8d8d8d8d612a59565b90505b6129d38787878787876132fa565b809750819850829950839a50849b50859c505050505050506002886129f89190614b43565b975061290e565b979650505050505050565b5f5f5f5f5f5f612a1a888861349f565b8092508193505050612a2e8c8c8484613165565b8096508197505050612a428a8a8484613165565b809450819550505050509650965096509692505050565b612a6161383b565b5f89148015612a6f57505f88145b15612b2c57868686868686865f60068110612a8d57612a8c6146ec565b5b6020020187600160068110612aa557612aa46146ec565b5b6020020188600260068110612abd57612abc6146ec565b5b6020020189600360068110612ad557612ad46146ec565b5b602002018a600460068110612aed57612aec6146ec565b5b602002018b600560068110612b0557612b046146ec565b5b60200201868152508681525086815250868152508681525086815250505050505050613155565b5f83148015612b3a57505f82145b15612bf7578c8c8c8c8c8c865f60068110612b5857612b576146ec565b5b6020020187600160068110612b7057612b6f6146ec565b5b6020020188600260068110612b8857612b876146ec565b5b6020020189600360068110612ba057612b9f6146ec565b5b602002018a600460068110612bb857612bb76146ec565b5b602002018b600560068110612bd057612bcf6146ec565b5b60200201868152508681525086815250868152508681525086815250505050505050613155565b612c0385858b8b613165565b8095508196505050612c178b8b8585613165565b82600260068110612c2b57612c2a6146ec565b5b6020020183600360068110612c4357612c426146ec565b5b6020020182815250828152505050612c5d87878b8b613165565b8097508198505050612c718d8d8585613165565b82600460068110612c8557612c846146ec565b5b6020020183600560068110612c9d57612c9c6146ec565b5b602002018281525082815250505080600460068110612cbf57612cbe6146ec565b5b602002015187148015612ce9575080600560068110612ce157612ce06146ec565b5b602002015186145b15612eab5780600260068110612d0257612d016146ec565b5b602002015185148015612d2c575080600360068110612d2457612d236146ec565b5b602002015184145b15612df157612d3f8d8d8d8d8d8d6132fa565b865f60068110612d5257612d516146ec565b5b6020020187600160068110612d6a57612d696146ec565b5b6020020188600260068110612d8257612d816146ec565b5b6020020189600360068110612d9a57612d996146ec565b5b602002018a600460068110612db257612db16146ec565b5b602002018b600560068110612dca57612dc96146ec565b5b60200201868152508681525086815250868152508681525086815250505050505050613155565b60015f60015f5f5f865f60068110612e0c57612e0b6146ec565b5b6020020187600160068110612e2457612e236146ec565b5b6020020188600260068110612e3c57612e3b6146ec565b5b6020020189600360068110612e5457612e536146ec565b5b602002018a600460068110612e6c57612e6b6146ec565b5b602002018b600560068110612e8457612e836146ec565b5b60200201868152508681525086815250868152508681525086815250505050505050613155565b612eb789898585613165565b8093508194505050612efb858583600260068110612ed857612ed76146ec565b5b602002015184600360068110612ef157612ef06146ec565b5b6020020151613295565b809d50819e505050612f3f878783600460068110612f1c57612f1b6146ec565b5b602002015184600560068110612f3557612f346146ec565b5b6020020151613295565b809b50819c505050612f538b8b8d8d613165565b809950819a505050612f97898983600460068110612f7457612f736146ec565b5b602002015184600560068110612f8d57612f8c6146ec565b5b6020020151613165565b8095508196505050612fab89898d8d613165565b809950819a505050612fbf89898585613165565b82600460068110612fd357612fd26146ec565b5b6020020183600560068110612feb57612fea6146ec565b5b60200201828152508281525050506130058d8d8f8f613165565b809750819850505061301987878585613165565b809750819850505061302d87878b8b613295565b8097508198505050613041858560026135fc565b809350819450505061305587878585613295565b80975081985050506130698b8b8989613165565b825f6006811061307c5761307b6146ec565b5b6020020183600160068110613094576130936146ec565b5b60200201828152508281525050506130ae85858989613295565b809b50819c5050506130c28d8d8d8d613165565b809b50819c5050506131068989836002600681106130e3576130e26146ec565b5b6020020151846003600681106130fc576130fb6146ec565b5b6020020151613165565b809d50819e50505061311a8b8b8f8f613295565b8260026006811061312e5761312d6146ec565b5b6020020183600360068110613146576131456146ec565b5b60200201828152508281525050505b9c9b505050505050505050505050565b5f5f6131f47f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061319957613198614a45565b5b8588097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47806131cb576131ca614a45565b5b8588097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761366e565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061322357613222614a45565b5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061325257613251614a45565b5b8688097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061328457613283614a45565b5b868a09089150915094509492505050565b5f5f6132c286857f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761366e565b6132ed86857f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761366e565b9150915094509492505050565b5f5f5f5f5f5f61330c8c8c60036135fc565b809650819750505061332086868e8e613165565b80965081975050506133348a8a8a8a613165565b80985081995050506133488c8c8c8c613165565b809450819550505061335c84848a8a613165565b809450819550505061337086868888613165565b809c50819d505050613384848460086135fc565b80925081935050506133988c8c8484613295565b809c50819d5050506133ac88888a8a613165565b80925081935050506133c0848460046135fc565b80945081955050506133d484848e8e613295565b80945081955050506133e884848888613165565b80945081955050506133fc8a8a60086135fc565b809650819750505061341086868c8c613165565b809650819750505061342486868484613165565b809650819750505061343884848888613295565b809450819550505061344c8c8c60026135fc565b809650819750505061346086868a8a613165565b809650819750505061347488888484613165565b8092508193505050613488828260086135fc565b809250819350505096509650965096509650969050565b5f5f5f61355f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47806134d4576134d3614a45565b5b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061350357613502614a45565b5b8788097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061353557613534614a45565b5b878809087f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47613695565b90507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47806135905761358f614a45565b5b8186097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47806135c2576135c1614a45565b5b8286097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476135f09190614aa2565b92509250509250929050565b5f5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061362d5761362c614a45565b5b8386097f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478061365f5761365e614a45565b5b84860991509150935093915050565b5f818061367e5761367d614a45565b5b838361368a9190614aa2565b850890509392505050565b5f5f60405160208152602080820152602060408201528460608201526002840360808201528360a082015260208160c08360056107d05a03fa91508051925050806136de575f5ffd5b5092915050565b8260028101928215613714579160200282015b828111156137135782518255916020019190600101906136f8565b5b509050613721919061385d565b5090565b6040518060400160405280613738613797565b8152602001613745613797565b81525090565b604051806040016040528061375e613878565b815260200161376b613878565b81525090565b6040518060400160405280613784613797565b8152602001613791613797565b81525090565b60405180604001604052805f81526020015f81525090565b60405180604001604052806137c2613797565b81526020016137cf61374b565b81525090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060200160405280600190602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b5b80821115613874575f815f90555060010161385e565b5090565b6040518060400160405280600290602082028036833780820191505090505090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6138f5826138af565b810181811067ffffffffffffffff82111715613914576139136138bf565b5b80604052505050565b5f61392661389a565b905061393282826138ec565b919050565b5f819050919050565b61394981613937565b8114613953575f5ffd5b50565b5f8135905061396481613940565b92915050565b5f6040828403121561397f5761397e6138ab565b5b613989604061391d565b90505f61399884828501613956565b5f8301525060206139ab84828501613956565b60208301525092915050565b5f5ffd5b5f67ffffffffffffffff8211156139d5576139d46138bf565b5b602082029050919050565b5f5ffd5b5f6139f66139f1846139bb565b61391d565b90508060208402830185811115613a1057613a0f6139e0565b5b835b81811015613a395780613a258882613956565b845260208401935050602081019050613a12565b5050509392505050565b5f82601f830112613a5757613a566139b7565b5b6002613a648482856139e4565b91505092915050565b5f60808284031215613a8257613a816138ab565b5b613a8c604061391d565b90505f613a9b84828501613a43565b5f830152506040613aae84828501613a43565b60208301525092915050565b5f5f60c08385031215613ad057613acf6138a3565b5b5f613add8582860161396a565b9250506040613aee85828601613a6d565b9150509250929050565b5f67ffffffffffffffff821115613b1257613b116138bf565b5b602082029050602081019050919050565b5f613b35613b3084613af8565b61391d565b90508083825260208201905060408402830185811115613b5857613b576139e0565b5b835b81811015613b815780613b6d888261396a565b845260208401935050604081019050613b5a565b5050509392505050565b5f82601f830112613b9f57613b9e6139b7565b5b8135613baf848260208601613b23565b91505092915050565b5f67ffffffffffffffff821115613bd257613bd16138bf565b5b602082029050602081019050919050565b5f613bf5613bf084613bb8565b61391d565b90508083825260208201905060208402830185811115613c1857613c176139e0565b5b835b81811015613c415780613c2d8882613956565b845260208401935050602081019050613c1a565b5050509392505050565b5f82601f830112613c5f57613c5e6139b7565b5b8135613c6f848260208601613be3565b91505092915050565b5f5f5f5f5f5f5f5f5f6101408a8c031215613c9657613c956138a3565b5b5f8a013567ffffffffffffffff811115613cb357613cb26138a7565b5b613cbf8c828d01613b8b565b99505060208a013567ffffffffffffffff811115613ce057613cdf6138a7565b5b613cec8c828d01613b8b565b98505060408a013567ffffffffffffffff811115613d0d57613d0c6138a7565b5b613d198c828d01613c4b565b9750506060613d2a8c828d0161396a565b96505060a08a013567ffffffffffffffff811115613d4b57613d4a6138a7565b5b613d578c828d01613b8b565b95505060c08a013567ffffffffffffffff811115613d7857613d776138a7565b5b613d848c828d01613b8b565b94505060e08a013567ffffffffffffffff811115613da557613da46138a7565b5b613db18c828d01613b8b565b9350506101008a013567ffffffffffffffff811115613dd357613dd26138a7565b5b613ddf8c828d01613c4b565b9250506101208a013567ffffffffffffffff811115613e0157613e006138a7565b5b613e0d8c828d01613c4b565b9150509295985092959850929598565b5f5ffd5b5f67ffffffffffffffff821115613e3b57613e3a6138bf565b5b613e44826138af565b9050602081019050919050565b828183375f83830152505050565b5f613e71613e6c84613e21565b61391d565b905082815260208101848484011115613e8d57613e8c613e1d565b5b613e98848285613e51565b509392505050565b5f82601f830112613eb457613eb36139b7565b5b8135613ec4848260208601613e5f565b91505092915050565b5f5f60a08385031215613ee357613ee26138a3565b5b5f613ef085828601613a6d565b925050608083013567ffffffffffffffff811115613f1157613f106138a7565b5b613f1d85828601613ea0565b9150509250929050565b5f8115159050919050565b613f3b81613f27565b82525050565b5f602082019050613f545f830184613f32565b92915050565b5f60029050919050565b5f81905092915050565b5f819050919050565b613f8081613937565b82525050565b5f613f918383613f77565b60208301905092915050565b5f602082019050919050565b613fb281613f5a565b613fbc8184613f64565b9250613fc782613f6e565b805f5b83811015613ff7578151613fde8782613f86565b9650613fe983613f9d565b925050600181019050613fca565b505050505050565b608082015f8201516140135f850182613fa9565b5060208201516140266040850182613fa9565b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61405e8261402c565b6140688185614036565b9350614078818560208601614046565b614081816138af565b840191505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b604082015f8201516140c95f850182613f77565b5060208201516140dc6020850182613f77565b50505050565b608082015f8201516140f65f8501826140b5565b50602082015161410960408501826140b5565b50505050565b5f61411a83836140e2565b60808301905092915050565b5f602082019050919050565b5f61413c8261408c565b6141468185614096565b9350614151836140a6565b805f5b83811015614181578151614168888261410f565b975061417383614126565b925050600181019050614154565b5085935050505092915050565b5f60c0820190506141a15f830186613fff565b81810360808301526141b38185614054565b905081810360a08301526141c78184614132565b9050949350505050565b5f602082840312156141e6576141e56138a3565b5b5f82013567ffffffffffffffff811115614203576142026138a7565b5b61420f84828501613b8b565b91505092915050565b5f6080828403121561422d5761422c6138ab565b5b614237604061391d565b90505f6142468482850161396a565b5f8301525060406142598482850161396a565b60208301525092915050565b5f6080828403121561427a576142796138a3565b5b5f61428784828501614218565b91505092915050565b61429981613937565b82525050565b5f6020820190506142b25f830184614290565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f602082019050919050565b5f6142f7826142b8565b61430181856142c2565b935061430c836142d2565b805f5b8381101561433c5781516143238882613f86565b975061432e836142e1565b92505060018101905061430f565b5085935050505092915050565b5f6020820190508181035f83015261436181846142ed565b905092915050565b5f5f5f5f5f6101208688031215614383576143826138a3565b5b5f6143908882890161396a565b95505060406143a18882890161396a565b94505060806143b288828901613956565b93505060a06143c38882890161396a565b92505060e06143d48882890161396a565b9150509295509295909350565b5f67ffffffffffffffff8211156143fb576143fa6138bf565b5b602082029050602081019050919050565b5f61441e614419846143e1565b61391d565b90508083825260208201905060808402830185811115614441576144406139e0565b5b835b8181101561446a57806144568882613a6d565b845260208401935050608081019050614443565b5050509392505050565b5f82601f830112614488576144876139b7565b5b813561449884826020860161440c565b91505092915050565b5f5f604083850312156144b7576144b66138a3565b5b5f83013567ffffffffffffffff8111156144d4576144d36138a7565b5b6144e085828601613b8b565b925050602083013567ffffffffffffffff811115614501576145006138a7565b5b61450d85828601614474565b9150509250929050565b5f5f5f5f5f5f5f5f6101c0898b031215614534576145336138a3565b5b5f6145418b828c0161396a565b98505060406145528b828c0161396a565b97505060806145638b828c0161396a565b96505060c06145748b828c0161396a565b9550506101006145868b828c0161396a565b9450506101406145988b828c0161396a565b9350506101806145aa8b828c01613956565b9250506101a06145bc8b828c01613956565b9150509295985092959890939650565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b608082015f8201516146095f8501826140b5565b50602082015161461c60408501826140b5565b50505050565b5f61462d83836145f5565b60808301905092915050565b5f602082019050919050565b5f61464f826145cc565b61465981856145d6565b9350614664836145e6565b805f5b8381101561469457815161467b8882614622565b975061468683614639565b925050600181019050614667565b5085935050505092915050565b5f6020820190508181035f8301526146b98184614645565b905092915050565b5f604082840312156146d6576146d56138a3565b5b5f6146e38482850161396a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061475d57607f821691505b6020821081036147705761476f614719565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026147d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614797565b6147dc8683614797565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61481761481261480d84613937565b6147f4565b613937565b9050919050565b5f819050919050565b614830836147fd565b61484461483c8261481e565b8484546147a3565b825550505050565b5f5f905090565b61485b61484c565b614866818484614827565b505050565b5b818110156148895761487e5f82614853565b60018101905061486c565b5050565b601f8211156148ce5761489f81614776565b6148a884614788565b810160208510156148b7578190505b6148cb6148c385614788565b83018261486b565b50505b505050565b5f82821c905092915050565b5f6148ee5f19846008026148d3565b1980831691505092915050565b5f61490683836148df565b9150826002028217905092915050565b61491f8261402c565b67ffffffffffffffff811115614938576149376138bf565b5b6149428254614746565b61494d82828561488d565b5f60209050601f83116001811461497e575f841561496c578287015190505b61497685826148fb565b8655506149dd565b601f19841661498c86614776565b5f5b828110156149b35784890151825560018201915060208501945060208101905061498e565b868310156149d057848901516149cc601f8916826148df565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f614a1c82613937565b9150614a2783613937565b9250828201905080821115614a3f57614a3e6149e5565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f614a7c82613937565b9150614a8783613937565b925082614a9757614a96614a45565b5b828206905092915050565b5f614aac82613937565b9150614ab783613937565b9250828203905081811115614acf57614ace6149e5565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b5f614b0c82613937565b9150614b1783613937565b9250828202614b2581613937565b91508282048414831517614b3c57614b3b6149e5565b5b5092915050565b5f614b4d82613937565b9150614b5883613937565b925082614b6857614b67614a45565b5b82820490509291505056fea2646970667358221220492bbbce7cd170435b565ca3f6e480ec8c2c46640f3283be4787d36d0dd4d0ad64736f6c634300081c0033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCaller) GetFieldModulus(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetFieldModulus")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetFieldModulus is a free data retrieval call binding the contract method 0x55a3e90f.
//
// Solidity: function GetFieldModulus() pure returns(uint256)
func (_Contract *ContractCallerSession) GetFieldModulus() (*big.Int, error) {
	return _Contract.Contract.GetFieldModulus(&_Contract.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractCaller) GetIndex(opts *bind.CallOpts) ([]*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetIndex")

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractSession) GetIndex() ([]*big.Int, error) {
	return _Contract.Contract.GetIndex(&_Contract.CallOpts)
}

// GetIndex is a free data retrieval call binding the contract method 0x77c50301.
//
// Solidity: function GetIndex() view returns(uint256[])
func (_Contract *ContractCallerSession) GetIndex() ([]*big.Int, error) {
	return _Contract.Contract.GetIndex(&_Contract.CallOpts)
}

// GetOnlyReKeysResult is a free data retrieval call binding the contract method 0x0dfe083f.
//
// Solidity: function GetOnlyReKeysResult() view returns(bool)
func (_Contract *ContractCaller) GetOnlyReKeysResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetOnlyReKeysResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetOnlyReKeysResult is a free data retrieval call binding the contract method 0x0dfe083f.
//
// Solidity: function GetOnlyReKeysResult() view returns(bool)
func (_Contract *ContractSession) GetOnlyReKeysResult() (bool, error) {
	return _Contract.Contract.GetOnlyReKeysResult(&_Contract.CallOpts)
}

// GetOnlyReKeysResult is a free data retrieval call binding the contract method 0x0dfe083f.
//
// Solidity: function GetOnlyReKeysResult() view returns(bool)
func (_Contract *ContractCallerSession) GetOnlyReKeysResult() (bool, error) {
	return _Contract.Contract.GetOnlyReKeysResult(&_Contract.CallOpts)
}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCaller) GetReCipher(opts *bind.CallOpts) (VerificationG2Point, string, []VerificationReCipher, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetReCipher")

	if err != nil {
		return *new(VerificationG2Point), *new(string), *new([]VerificationReCipher), err
	}

	out0 := *abi.ConvertType(out[0], new(VerificationG2Point)).(*VerificationG2Point)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)
	out2 := *abi.ConvertType(out[2], new([]VerificationReCipher)).(*[]VerificationReCipher)

	return out0, out1, out2, err

}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractSession) GetReCipher() (VerificationG2Point, string, []VerificationReCipher, error) {
	return _Contract.Contract.GetReCipher(&_Contract.CallOpts)
}

// GetReCipher is a free data retrieval call binding the contract method 0x20a8dba6.
//
// Solidity: function GetReCipher() view returns((uint256[2],uint256[2]), string, ((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCallerSession) GetReCipher() (VerificationG2Point, string, []VerificationReCipher, error) {
	return _Contract.Contract.GetReCipher(&_Contract.CallOpts)
}

// GetReKeys is a free data retrieval call binding the contract method 0xc0f437d4.
//
// Solidity: function GetReKeys() view returns(((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCaller) GetReKeys(opts *bind.CallOpts) ([]VerificationReKey, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetReKeys")

	if err != nil {
		return *new([]VerificationReKey), err
	}

	out0 := *abi.ConvertType(out[0], new([]VerificationReKey)).(*[]VerificationReKey)

	return out0, err

}

// GetReKeys is a free data retrieval call binding the contract method 0xc0f437d4.
//
// Solidity: function GetReKeys() view returns(((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractSession) GetReKeys() ([]VerificationReKey, error) {
	return _Contract.Contract.GetReKeys(&_Contract.CallOpts)
}

// GetReKeys is a free data retrieval call binding the contract method 0xc0f437d4.
//
// Solidity: function GetReKeys() view returns(((uint256,uint256),(uint256,uint256))[])
func (_Contract *ContractCallerSession) GetReKeys() ([]VerificationReKey, error) {
	return _Contract.Contract.GetReKeys(&_Contract.CallOpts)
}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool)
func (_Contract *ContractCaller) GetReKeysResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetReKeysResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool)
func (_Contract *ContractSession) GetReKeysResult() (bool, error) {
	return _Contract.Contract.GetReKeysResult(&_Contract.CallOpts)
}

// GetReKeysResult is a free data retrieval call binding the contract method 0x5f601a05.
//
// Solidity: function GetReKeysResult() view returns(bool)
func (_Contract *ContractCallerSession) GetReKeysResult() (bool, error) {
	return _Contract.Contract.GetReKeysResult(&_Contract.CallOpts)
}

// GetVKoResult is a free data retrieval call binding the contract method 0x1357d59b.
//
// Solidity: function GetVKoResult() view returns(bool)
func (_Contract *ContractCaller) GetVKoResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetVKoResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetVKoResult is a free data retrieval call binding the contract method 0x1357d59b.
//
// Solidity: function GetVKoResult() view returns(bool)
func (_Contract *ContractSession) GetVKoResult() (bool, error) {
	return _Contract.Contract.GetVKoResult(&_Contract.CallOpts)
}

// GetVKoResult is a free data retrieval call binding the contract method 0x1357d59b.
//
// Solidity: function GetVKoResult() view returns(bool)
func (_Contract *ContractCallerSession) GetVKoResult() (bool, error) {
	return _Contract.Contract.GetVKoResult(&_Contract.CallOpts)
}

// GetVKuResult is a free data retrieval call binding the contract method 0x6a3c9cf4.
//
// Solidity: function GetVKuResult() view returns(bool)
func (_Contract *ContractCaller) GetVKuResult(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "GetVKuResult")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetVKuResult is a free data retrieval call binding the contract method 0x6a3c9cf4.
//
// Solidity: function GetVKuResult() view returns(bool)
func (_Contract *ContractSession) GetVKuResult() (bool, error) {
	return _Contract.Contract.GetVKuResult(&_Contract.CallOpts)
}

// GetVKuResult is a free data retrieval call binding the contract method 0x6a3c9cf4.
//
// Solidity: function GetVKuResult() view returns(bool)
func (_Contract *ContractCallerSession) GetVKuResult() (bool, error) {
	return _Contract.Contract.GetVKuResult(&_Contract.CallOpts)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactor) DLEQVerify(opts *bind.TransactOpts, g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "DLEQVerify", g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// DLEQVerify is a paid mutator transaction binding the contract method 0x9e134b59.
//
// Solidity: function DLEQVerify((uint256,uint256) g, (uint256,uint256) y1, (uint256,uint256) a1, (uint256,uint256) h, (uint256,uint256) y2, (uint256,uint256) a2, uint256 c, uint256 z) payable returns(bool)
func (_Contract *ContractTransactorSession) DLEQVerify(g VerificationG1Point, y1 VerificationG1Point, a1 VerificationG1Point, h VerificationG1Point, y2 VerificationG1Point, a2 VerificationG1Point, c *big.Int, z *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.DLEQVerify(&_Contract.TransactOpts, g, y1, a1, h, y2, a2, c, z)
}

// KZGVerify is a paid mutator transaction binding the contract method 0x9a34712e.
//
// Solidity: function KZGVerify((uint256,uint256) rsk0, (uint256,uint256) rsk1, uint256 i, (uint256,uint256) commitment, (uint256,uint256) witness) returns(bool)
func (_Contract *ContractTransactor) KZGVerify(opts *bind.TransactOpts, rsk0 VerificationG1Point, rsk1 VerificationG1Point, i *big.Int, commitment VerificationG1Point, witness VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "KZGVerify", rsk0, rsk1, i, commitment, witness)
}

// KZGVerify is a paid mutator transaction binding the contract method 0x9a34712e.
//
// Solidity: function KZGVerify((uint256,uint256) rsk0, (uint256,uint256) rsk1, uint256 i, (uint256,uint256) commitment, (uint256,uint256) witness) returns(bool)
func (_Contract *ContractSession) KZGVerify(rsk0 VerificationG1Point, rsk1 VerificationG1Point, i *big.Int, commitment VerificationG1Point, witness VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.KZGVerify(&_Contract.TransactOpts, rsk0, rsk1, i, commitment, witness)
}

// KZGVerify is a paid mutator transaction binding the contract method 0x9a34712e.
//
// Solidity: function KZGVerify((uint256,uint256) rsk0, (uint256,uint256) rsk1, uint256 i, (uint256,uint256) commitment, (uint256,uint256) witness) returns(bool)
func (_Contract *ContractTransactorSession) KZGVerify(rsk0 VerificationG1Point, rsk1 VerificationG1Point, i *big.Int, commitment VerificationG1Point, witness VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.KZGVerify(&_Contract.TransactOpts, rsk0, rsk1, i, commitment, witness)
}

// OnlyUploadReCipher is a paid mutator transaction binding the contract method 0xecd225dd.
//
// Solidity: function OnlyUploadReCipher((uint256,uint256) c3) returns()
func (_Contract *ContractTransactor) OnlyUploadReCipher(opts *bind.TransactOpts, c3 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "OnlyUploadReCipher", c3)
}

// OnlyUploadReCipher is a paid mutator transaction binding the contract method 0xecd225dd.
//
// Solidity: function OnlyUploadReCipher((uint256,uint256) c3) returns()
func (_Contract *ContractSession) OnlyUploadReCipher(c3 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.OnlyUploadReCipher(&_Contract.TransactOpts, c3)
}

// OnlyUploadReCipher is a paid mutator transaction binding the contract method 0xecd225dd.
//
// Solidity: function OnlyUploadReCipher((uint256,uint256) c3) returns()
func (_Contract *ContractTransactorSession) OnlyUploadReCipher(c3 VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.OnlyUploadReCipher(&_Contract.TransactOpts, c3)
}

// OnlyUploadReKeys is a paid mutator transaction binding the contract method 0x04d06790.
//
// Solidity: function OnlyUploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactor) OnlyUploadReKeys(opts *bind.TransactOpts, rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "OnlyUploadReKeys", rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// OnlyUploadReKeys is a paid mutator transaction binding the contract method 0x04d06790.
//
// Solidity: function OnlyUploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractSession) OnlyUploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.OnlyUploadReKeys(&_Contract.TransactOpts, rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// OnlyUploadReKeys is a paid mutator transaction binding the contract method 0x04d06790.
//
// Solidity: function OnlyUploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactorSession) OnlyUploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.OnlyUploadReKeys(&_Contract.TransactOpts, rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0x450d46eb.
//
// Solidity: function ReCipherVerify(((uint256,uint256),(uint256,uint256)) recipher) returns(bool)
func (_Contract *ContractTransactor) ReCipherVerify(opts *bind.TransactOpts, recipher VerificationReCipher) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "ReCipherVerify", recipher)
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0x450d46eb.
//
// Solidity: function ReCipherVerify(((uint256,uint256),(uint256,uint256)) recipher) returns(bool)
func (_Contract *ContractSession) ReCipherVerify(recipher VerificationReCipher) (*types.Transaction, error) {
	return _Contract.Contract.ReCipherVerify(&_Contract.TransactOpts, recipher)
}

// ReCipherVerify is a paid mutator transaction binding the contract method 0x450d46eb.
//
// Solidity: function ReCipherVerify(((uint256,uint256),(uint256,uint256)) recipher) returns(bool)
func (_Contract *ContractTransactorSession) ReCipherVerify(recipher VerificationReCipher) (*types.Transaction, error) {
	return _Contract.Contract.ReCipherVerify(&_Contract.TransactOpts, recipher)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractTransactor) UploadCiphertext(opts *bind.TransactOpts, c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadCiphertext", c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractSession) UploadCiphertext(c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadCiphertext is a paid mutator transaction binding the contract method 0x07267e5e.
//
// Solidity: function UploadCiphertext((uint256[2],uint256[2]) c0, string c1) returns()
func (_Contract *ContractTransactorSession) UploadCiphertext(c0 VerificationG2Point, c1 string) (*types.Transaction, error) {
	return _Contract.Contract.UploadCiphertext(&_Contract.TransactOpts, c0, c1)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactor) UploadDRsKey(opts *bind.TransactOpts, pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadDRsKey", pkArray)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractSession) UploadDRsKey(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDRsKey(&_Contract.TransactOpts, pkArray)
}

// UploadDRsKey is a paid mutator transaction binding the contract method 0x3ae15490.
//
// Solidity: function UploadDRsKey((uint256,uint256)[] pkArray) returns()
func (_Contract *ContractTransactorSession) UploadDRsKey(pkArray []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadDRsKey(&_Contract.TransactOpts, pkArray)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactor) UploadOwnerKey(opts *bind.TransactOpts, pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadOwnerKey", pk, vk)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractSession) UploadOwnerKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerKey(&_Contract.TransactOpts, pk, vk)
}

// UploadOwnerKey is a paid mutator transaction binding the contract method 0x0359a5dd.
//
// Solidity: function UploadOwnerKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactorSession) UploadOwnerKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadOwnerKey(&_Contract.TransactOpts, pk, vk)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x593f5f2f.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c3) returns()
func (_Contract *ContractTransactor) UploadReCipher(opts *bind.TransactOpts, c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadReCipher", c3)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x593f5f2f.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c3) returns()
func (_Contract *ContractSession) UploadReCipher(c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReCipher(&_Contract.TransactOpts, c3)
}

// UploadReCipher is a paid mutator transaction binding the contract method 0x593f5f2f.
//
// Solidity: function UploadReCipher((uint256,uint256)[] c3) returns()
func (_Contract *ContractTransactorSession) UploadReCipher(c3 []VerificationG1Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadReCipher(&_Contract.TransactOpts, c3)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xfea3c750.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactor) UploadReKeys(opts *bind.TransactOpts, rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadReKeys", rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xfea3c750.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractSession) UploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeys(&_Contract.TransactOpts, rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// UploadReKeys is a paid mutator transaction binding the contract method 0xfea3c750.
//
// Solidity: function UploadReKeys((uint256,uint256)[] rks0, (uint256,uint256)[] rks1, uint256[] I, (uint256,uint256) commitment, (uint256,uint256)[] witness, (uint256,uint256)[] a1, (uint256,uint256)[] a2, uint256[] c, uint256[] z) returns()
func (_Contract *ContractTransactorSession) UploadReKeys(rks0 []VerificationG1Point, rks1 []VerificationG1Point, I []*big.Int, commitment VerificationG1Point, witness []VerificationG1Point, a1 []VerificationG1Point, a2 []VerificationG1Point, c []*big.Int, z []*big.Int) (*types.Transaction, error) {
	return _Contract.Contract.UploadReKeys(&_Contract.TransactOpts, rks0, rks1, I, commitment, witness, a1, a2, c, z)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractTransactor) UploadSystemKey(opts *bind.TransactOpts, tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadSystemKey", tau1, tau2)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractSession) UploadSystemKey(tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadSystemKey(&_Contract.TransactOpts, tau1, tau2)
}

// UploadSystemKey is a paid mutator transaction binding the contract method 0x9da5cd00.
//
// Solidity: function UploadSystemKey((uint256,uint256)[] tau1, (uint256[2],uint256[2])[] tau2) returns()
func (_Contract *ContractTransactorSession) UploadSystemKey(tau1 []VerificationG1Point, tau2 []VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadSystemKey(&_Contract.TransactOpts, tau1, tau2)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactor) UploadUserKey(opts *bind.TransactOpts, pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "UploadUserKey", pk, vk)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractSession) UploadUserKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserKey(&_Contract.TransactOpts, pk, vk)
}

// UploadUserKey is a paid mutator transaction binding the contract method 0xf029c25e.
//
// Solidity: function UploadUserKey((uint256,uint256) pk, (uint256[2],uint256[2]) vk) returns()
func (_Contract *ContractTransactorSession) UploadUserKey(pk VerificationG1Point, vk VerificationG2Point) (*types.Transaction, error) {
	return _Contract.Contract.UploadUserKey(&_Contract.TransactOpts, pk, vk)
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() returns()
func (_Contract *ContractTransactor) VKoVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VKoVerify")
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() returns()
func (_Contract *ContractSession) VKoVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKoVerify(&_Contract.TransactOpts)
}

// VKoVerify is a paid mutator transaction binding the contract method 0x08ac6601.
//
// Solidity: function VKoVerify() returns()
func (_Contract *ContractTransactorSession) VKoVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKoVerify(&_Contract.TransactOpts)
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() returns()
func (_Contract *ContractTransactor) VKuVerify(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "VKuVerify")
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() returns()
func (_Contract *ContractSession) VKuVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKuVerify(&_Contract.TransactOpts)
}

// VKuVerify is a paid mutator transaction binding the contract method 0x8959c8e5.
//
// Solidity: function VKuVerify() returns()
func (_Contract *ContractTransactorSession) VKuVerify() (*types.Transaction, error) {
	return _Contract.Contract.VKuVerify(&_Contract.TransactOpts)
}
